---
title: "Multiple linear regression"
subtitle: "Types of predictors cont'd + Model comparison"
date: "2025-01-30"
date-format: "MMM DD, YYYY"
author: "Prof. Maria Tackett"
footer: "[ðŸ”— STA 221 - Spring 2025](https://sta221-sp25.netlify.app)"
logo: "../images/logo.png"
format: 
  revealjs: 
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
    include-before: [ '<script type="text/x-mathjax-config">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']
  html: 
    output-file: 07-mlr-pt3-notes.html
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
execute:
  freeze: auto
  echo: true
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

## Announcements

-   HW 01 due **TODAY** at 11:59pm

-   Team labs start on Friday

-   [Click here](https://prodduke.sharepoint.com/:p:/s/ARCStaff839/EZ4PKTRTlCVMpFZiR6XoRycB4UUlRMuI2_Rda9hKxNZtsA) to learn more about the Academic Resource Center

-   [Statistics experience](../hw/stats-experience.html) due **Tuesday, April 22**

## Topics

-   Centering quantitative predictors

-   Standardizing quantitative predictors

-   Interaction terms

-   Model comparison

    -   RMSE

    -   $Adj. R^2$

## Computing setup

```{r packages}
#| echo: true
#| message: false

# load packages
library(tidyverse)
library(tidymodels)
library(openintro)
library(patchwork)
library(knitr)
library(kableExtra)
library(viridis) #adjust color palette

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))
```

## Data: Peer-to-peer lender

Today's data is a sample of 50 loans made through a peer-to-peer lending club. The data is in the `loan50` data frame in the **openintro** R package.

```{r}
#| echo: false

loan50 <- loan50 |>
  mutate(annual_income_th = annual_income / 1000)

loan50 |>
  select(annual_income_th, debt_to_income, verified_income, interest_rate)
```

## Variables

**Predictors**:

::: nonincremental
-   `annual_income_th`: Annual income (in \$1000s)
-   `debt_to_income`: Debt-to-income ratio, i.e. the percentage of a borrower's total debt divided by their total income
-   `verified_income`: Whether borrower's income source and amount have been verified (`Not Verified`, `Source Verified`, `Verified`)
:::

**Response**: `interest_rate`: Interest rate for the loan

## Response vs. predictors {.small}

```{r}
#| echo: false
#| fig-align: center
#| fig-width: 10
p4 <- ggplot(loan50, aes(x = verified_income, y = interest_rate)) +
  geom_boxplot(fill = "steelblue") +
  labs(
    y = "Interest rate",
    x = "Income verification"
  )

p5 <- ggplot(loan50, aes(x = debt_to_income, y = interest_rate)) +
  geom_point(color = "steelblue") +
  labs(
    y = NULL,
    x = "Debt to income ratio"
  )


p6 <- ggplot(loan50, aes(x = annual_income_th, y = interest_rate)) +
  geom_point(color = "steelblue") +
  labs(
    y = NULL,
    x = "Annual income (in $1000s)"
  )

p4 + p5 / p6
```

**Goal**: Use these predictors in a single model to understand variability in interest rate.

## Model fit in R

```{r}
#| echo: true

int_fit <- lm(interest_rate ~ debt_to_income + verified_income  + annual_income_th,
              data = loan50)

tidy(int_fit) |>
  kable(digits = 3)
```

# Categorical predictors

## Interpreting `verified_income` {.small}

```{r}
#| echo: false
tidy(int_fit
, conf.int  = T) |>
  kable(digits = 3) |>
  row_spec(c(3,4), background = "#dce5b2")
```

::: incremental
-   The baseline level is `Not verified`.
-   People with source verified income are expected to take a loan with an interest rate that is 2.211% higher, on average, than the rate on loans to those whose income is not verified, holding all else constant.
:::

## Centering {.midi}

-   Centering a quantitative predictor means shifting every value by some constant $C$

$$
X_{cent} = X  - C
$$

-   One common type of centering is **mean-centering**, in which every value of a predictor is shifted by its mean

-   Only quantitative predictors are centered

-   Center all quantitative predictors in the model for ease of interpretation

::: question
What is one reason one might want to center the quantitative predictors? What is are the units of centered variables?
:::

## Centering {.midi}

Use the `scale()` function with `center = TRUE` and `scale = FALSE` to mean-center variables

```{r}
#| output-location: fragment 

loan50 <- loan50 |>
  mutate(debt_to_inc_cent = scale(debt_to_income, center = TRUE, scale = FALSE), 
         annual_inc_cent = scale(annual_income_th, center = TRUE, scale = FALSE))

lm(interest_rate ~ debt_to_inc_cent + verified_income + annual_inc_cent, data = loan50) |> 
  tidy() |> kable(digits = 3)
```

## Centering

```{r}
#| echo: false
#| message: false
#| warning: false

orig_model <- tidy(int_fit) |>
  select(term, estimate) 

cent_model <- lm(interest_rate ~ debt_to_inc_cent + verified_income + annual_inc_cent, data = loan50) |> tidy() |>
select(estimate)

orig_model |> bind_cols(cent_model) |> 
  kable(digits = 3, 
        col.names = c("Term", "Original Model", "Centered Model"))
```

::: question
How has the model changed? How has the model remained the same?
:::

## Standardizing {.midi}

-   Standardizing a quantitative predictor mean shifting every value by the mean and dividing by the standard deviation of that variable

$$
X_{std} = \frac{X - \bar{X}}{S_X}
$$

-   Only quantitative predictors are standardized

-   Standardize all quantitative predictors in the model for ease of interpretation

::: question
What is one reason one might want to standardize the quantitative predictors? What is are the units of standardized variables?
:::

## Standardizing {.midi}

Use the `scale()` function with `center = TRUE` and `scale = TRUE` to standardized variables

```{r}
#| output-location: fragment 
#| 
loan50 <- loan50 |>
  mutate(debt_to_inc_std = scale(debt_to_income, center = TRUE, scale = TRUE), 
         annual_inc_std = scale(annual_income_th, center = TRUE, scale = TRUE))

lm(interest_rate ~ debt_to_inc_std + verified_income + annual_inc_std, data = loan50) |>
  tidy() |> kable(digits = 3)
```

## Standardizing

```{r}
#| echo: false
#| warning: false
#| message: false

orig_model <- tidy(int_fit) |>
  select(term, estimate) 

std_model <- lm(interest_rate ~ debt_to_inc_std + verified_income + annual_inc_std, data = loan50) |> tidy() |>
select(estimate)

orig_model |> bind_cols(std_model) |> 
  kable(digits = 3, 
        col.names = c("Term", "Original Model", "Standardized Model"))
```

::: question
How has the model changed? How has the model remained the same?
:::

# Interaction terms

## Interaction terms

-   Sometimes the relationship between a predictor variable and the response depends on the value of another predictor variable.
-   This is an **interaction effect**.
-   To account for this, we can include **interaction terms** in the model.

## Interest rate vs. annual income

The lines are not parallel indicating there is a potential **interaction effect**. The slope of annual income differs based on the income verification.

```{r}
#| echo: false
#| fig-align: center
#| warning: false
#| message: false

p1 <- ggplot(loan50, 
             aes(x = annual_income_th, y = interest_rate)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(
    x = "Annual income (in $1000s)",
    y = "Interest rate"
  )

p2 <- ggplot(loan50, 
             aes(x = annual_income_th, y = interest_rate,
                 color = verified_income)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(x = "Annual income (in $1000s)", y = NULL, color = NULL) +
  theme(legend.position = c(0.6, 0.9)) +
  scale_color_viridis_d(end = 0.9)

p1 + p2 +
  plot_annotation(title = "Interest rate vs. annual income")
```

## Interaction term in model {.smaller}

```{r}
#| echo: true
int_fit_2 <- lm(interest_rate ~ debt_to_income + verified_income + annual_income_th + verified_income * annual_income_th,
      data = loan50)
```

```{r}
#| echo: false
tidy(int_fit_2) |>
  kable(digits = 3) |>
  row_spec(c(6,7), background = "#dce5b2")
```

## Interaction term in model {.midi}

```{r}
#| echo: false
tidy(int_fit_2) |>
  kable(digits = 3) |>
  row_spec(c(6,7), background = "#dce5b2")
```

::: question
-   Write the regression equation for the people with `Not Verified` income.

-   Write the regression equation for people with `Verified` income.
:::

## Interpreting interaction terms

-   What the interaction means: The effect of annual income on the interest rate differs by -0.016 when the income is source verified compared to when it is not verified, holding all else constant.
-   Interpreting `annual_income` for source verified: If the income is source verified, we expect the interest rate to decrease by 0.023% (-0.007 + -0.016) for each additional thousand dollars in annual income, holding all else constant.

## Summary

::: question
In general, how do

-   indicators for categorical predictors impact the model equation?

-   interaction terms impact the model equation?
:::

# Model comparison

## Model assessment: RMSE & $R^2$

-   **Root mean square error, RMSE**: A measure of the average error (average difference between observed and predicted values of the outcome)

-   **R-squared**, $R^2$ : Percentage of variability in the outcome explained by the regression model

## Comparing models

::: incremental
-   When comparing models, do we prefer the model with the lower or higher RMSE?

-   Though we use $R^2$ to assess the model fit, it is generally unreliable for comparing models with different number of predictors. Why?

    -   $R^2$ will stay the same or increase as we add more variables to the model . Let's show why this is true.

    -   If we only use $R^2$ to choose a best fit model, we will be prone to choose the model with the most predictor variables.
:::

## Adjusted $R^2$

-   **Adjusted** $R^2$: measure that includes a penalty for unnecessary predictor variables
-   Similar to $R^2$, it is a measure of the amount of variation in the response that is explained by the regression model
-   Use the `glance()` function to get $Adj. R^2$ in R

```{r}
glance(int_fit)$adj.r.squared
```

## $R^2$ and Adjusted $R^2$

$$R^2 = \frac{SSM}{SST} = 1 - \frac{SSR}{SST}$$

<br>

. . .

$$R^2_{adj} = 1 - \frac{SSR/(n-p-1)}{SST/(n-1)}$$

where

-   $n$ is the number of observations used to fit the model

-   $p$ is the number of terms (not including the intercept) in the model

## Using $R^2$ and Adjusted $R^2$

-   Adjusted $R^2$ can be used as a quick assessment to compare the fit of multiple models; however, it should not be the only assessment!
-   Use $R^2$ when describing the relationship between the response and predictor variables

## Comparing interest rate models

::::: columns
::: {.column width="50%"}
**Model without interaction**

```{r}
# r-squared
glance(int_fit)$r.squared
```

<br>

```{r}
# adj-r-squared
glance(int_fit)$adj.r.squared
```
:::

::: {.column width="50%"}
**Model with interaction**

```{r}
# r-squared
glance(int_fit_2)$r.squared
```

<br>

```{r}
# adj-r-squared
glance(int_fit_2)$adj.r.squared
```
:::
:::::

## Recap

-   Fit and interpreted models with centered and standardized variables

-   Interpreted interaction terms

-   Used RMSE and $Adj. R^2$ to compare models

## Next class

-   Inference for regression

-   See [Prepare for Lecture 08](../prepare/prepare-lec08.html)
