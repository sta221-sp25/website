---
title: "Simple linear regression"
author: "Prof. Maria Tackett"
date: "2025-01-14"
date-format: "MMM DD, YYYY"
footer: "[ðŸ”— STA 221 - Spring 2025](https://sta221-sp25.netlify.app)"
logo: "../images/logo.png"
format: 
  revealjs: 
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
    include-before: [ '<script type="text/x-mathjax-config">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
  html: 
    output-file: 02-slr-notes.html
execute:
  freeze: auto
  echo: true
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

## Announcements <!--#Update--> {.midi}

-   Application exercises start Thursday

    -   Bring fully-charged laptop or device with keyboard
    -   Make sure you have accepted invite to GitHub course organization

-   Complete [Lab 00](../labs/lab-00.html)

-   Office hours start this week

    -   Alan's office hours start January 27

# Questions from last class?

## Topics

-   How regression is used to understand the relationship between multiple variables
-   Least squares estimation for the slope and intercept
-   Interpret the slope and intercept
-   Predict the response given a value of the predictor

## Computing set up

```{r}
#| echo: true

# load packages
library(tidyverse)        # for data wrangling
library(broom)            # for formatting regression output
library(fivethirtyeight)  # for the fandango dataset
library(knitr)            # for formatting tables
library(patchwork)        # for arranging graphs

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_bw(base_size = 16))

# set default figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 8,
  fig.asp = 0.618,
  fig.retina = 3,
  dpi = 300,
  out.width = "80%"
)
```

------------------------------------------------------------------------

![Source: [*R for Data Science*](https://r4ds.hadley.nz/) with additions from *The Art of Statistics: How to Learn from Data*.](images/02/data-analysis-life-cycle.png)

------------------------------------------------------------------------

![Source:[*R for Data Science*](https://r4ds.hadley.nz/)](images/02/whole-game.png)

# Data

## Movie scores

::::: columns
::: {.column width="70%"}
-   Data behind the FiveThirtyEight story [*Be Suspicious Of Online Movie Ratings, Especially Fandango's*](https://fivethirtyeight.com/features/fandango-movies-ratings/)
-   In the **fivethirtyeight** package: [`fandango`](https://fivethirtyeight-r.netlify.app/reference/fandango.html)
-   Contains every film released in 2014 and 2015 that has at least 30 fan reviews on Fandango, an IMDb score, Rotten Tomatoes critic and user ratings, and Metacritic critic and user scores
:::

::: {.column width="30%"}
![](images/02/fandango.png){fig-alt="Fandango logo" width="200"}

![](images/02/imdb.png){fig-alt="IMDB logo" width="200"}

![](images/02/rotten-tomatoes.png){fig-alt="Rotten Tomatoes logo" width="200"}

![](images/02/metacritic.png){fig-alt="Metacritic logo" width="200"}
:::
:::::

## Data prep

-   Rename Rotten Tomatoes columns as `critics` and `audience`
-   Rename the data set as `movie_scores`

```{r data-prep}
#| echo: true
movie_scores <- fandango |>
  rename(critics = rottentomatoes, 
         audience = rottentomatoes_user)
```

## Data overview

```{r data-overview}
#| echo: true
glimpse(movie_scores)
```

## Univariate exploratory data analysis (EDA)

The data set contains the "Tomatometer" score (**`critics`**) and audience score (**`audience`**) for 146 movies rated on rottentomatoes.com.

```{r}
#| echo: false
#| fig-align: center

p1 <- ggplot(data = movie_scores, mapping = aes(x = critics)) +
  geom_histogram(fill = "steelblue", color = "black") + 
  labs(x = "Critics Score")

p2 <- ggplot(data = movie_scores, mapping = aes(x = audience)) +
  geom_histogram(fill = "steelblue", color = "black") + 
  labs(x = "Audience Score")

p1 + p2
```

## Bivariate EDA

```{r}
#| echo: false
#| fig-align: center
ggplot(data = movie_scores, mapping = aes(x = critics, y = audience)) +
  geom_point(alpha = 0.5) + 
  labs(x = "Critics Score" , 
       y = "Audience Score",
       title = "Audience vs. critics score",
       subtitle = "146 movies rated on rottentomatoes.com")
```

## Bivariate EDA

**Goal**: Fit a line to describe the relationship between the critics score and audience score.

```{r}
#| echo: false
#| fig-align: center
p <- ggplot(data = movie_scores, mapping = aes(x = critics, y = audience)) +
  geom_point(alpha = 0.5) + 
  geom_smooth(method = "lm", color = "red", se = FALSE) +
  labs(x = "Critics Score" , 
       y = "Audience Score",
       title = "Audience vs. critics score",
       subtitle = "146 movies rated on rottentomatoes.com")

p
```

## Why fit a line?

We fit a line to accomplish one or both of the following:

<br>

. . .

::: {style="color: #799100"}
**Prediction**
:::

::: question
What is an example of a prediction question for this data set?
:::

<br>

. . .

::: {style="color : #799100"}
**Inference**
:::

::: question
What is an example of an inference question for this data set?
:::

## Terminology

::::: columns
::: {.column width="30%"}
-   **Response,** $Y$: variable describing the outcome of interest

-   **Predictor,** $X$: variable we use to help understand the variability in the response
:::

::: {.column width="70%"}
```{r}
#| echo: false
#| fig-align: center
p 
```
:::
:::::

## Regression model

A **regression model** is a function that describes the relationship between the response, $Y$, and the predictor, $X$.

\begin{aligned} Y &= \color{black}{\textbf{Model}} + \text{Error} \\[8pt]
&= \color{black}{f(X)} + \epsilon \\[8pt]
& = \color{black}{E(Y|X)} + \epsilon \\[8pt]
&= \color{black}{\mu_{Y|X}} + \epsilon \end{aligned}

## Regression model

::::: columns
::: {.column width="30%"}
\begin{aligned} Y &= \color{purple}{\textbf{Model}} + \text{Error} \\[8pt]
&= \color{purple}{f(X)} + \epsilon \\[8pt]
&= \color{purple}{E(Y|X)} + \epsilon \\[8pt]
&= \color{purple}{\mu_{Y|X}} + \epsilon \end{aligned}
:::

::: {.column width="70%"}
```{r}
#| echo: false
#| fig-align: center
ggplot(data = movie_scores, mapping = aes(x = critics, y = audience)) +
  geom_point(alpha = 0.5) + 
  geom_smooth(method = "lm", color = "purple", se = FALSE) +
  labs(x = "X" , 
       y = "Y") +
  theme(axis.text = element_blank(),
  axis.ticks.x = element_blank(), 
  axis.ticks.y = element_blank())
```
:::
:::::

$E(Y|X) = \mu_{Y|X}$, the mean value of $Y$ given a particular value of $X$.

## Regression model

::::: columns
::: {.column width="30%"}
$$
\begin{aligned} Y &= \color{purple}{\textbf{Model}} + \color{blue}{\textbf{Error}} \\[8pt]
&= \color{purple}{f(X)} + \color{blue}{\epsilon}\\[8pt]
&= \color{purple}{E(Y|X)} + \color{blue}{\epsilon}\\[8pt]
&= \color{purple}{\mu_{Y|X}} + \color{blue}{\epsilon} \\
 \end{aligned}
$$
:::

::: {.column width="70%"}
```{r}
#| echo: false
m <- lm(audience ~ critics, data = movie_scores)
ggplot(data = movie_scores, mapping = aes(x = critics, y = audience)) +
  geom_point(alpha = 0.5) + 
  geom_smooth(method = "lm", color = "purple", se = FALSE) +
  geom_segment(aes(x=critics, xend=critics, y=audience, yend=predict(m, movie_scores)), color = "blue", linetype = "dotted") +
  labs(x = "X" , 
       y = "Y") +
  theme_bw() +
  theme(axis.text = element_blank(),
  axis.ticks.x = element_blank(), 
  axis.ticks.y = element_blank())
```
:::
:::::

## Determine $f(X)$

-   **Goal**: Determine $f(X)$

-   How do we determine $f(X)$

    -   Make an assumption about the functional form $f(X)$ (parametric model)

    -   Use the data to fit a model based on that form

# Simple linear regression (SLR)

## SLR: Statistical model (population) {.midi}

When we have a quantitative response, $Y$, and a single quantitative predictor, $X$, we can use a (**simple) linear regression** model to describe the relationship between $Y$ and $X$. $$Y = \beta_0 + \beta_1X + \epsilon$$

. . .

-   $\beta_1$: Population (true) slope of the relationship between $X$ and $Y$
-   $\beta_0$: Population (true) intercept of the relationship between $X$ and $Y$
-   $\epsilon$: Error terms with mean 0 and variance $\sigma^2_{\epsilon}$

## SLR: Regression equation (sample)

$$\hat{Y} = \hat{\beta}_0 + \hat{\beta}_1 X$$

-   $\hat{\beta}_1$: Estimated (sample) slope of the relationship between $X$ and $Y$
-   $\hat{\beta}_0$: Estimated (sample) intercept of the relationship between $X$ and $Y$
-   No error term!

. . .

::: question
Why is there no error term in the estimated regression equation?
:::

## Finding $\hat{\beta}_1$ and $\hat{\beta}_0$

```{r}
#| echo: false
#| fig-align: center
ggplot(data = movie_scores, mapping = aes(x = critics, y = audience)) +
  geom_point(alpha = 0.4) + 
  geom_abline(intercept = 32.296, slope = 0.5187, color = "red", size = 1) +
  geom_abline(intercept = 25, slope = 0.7, color = "gray") +
  geom_abline(intercept = 21, slope = 0.9, color = "gray") +
  geom_abline(intercept = 35, slope = 0.3, color = "gray") +
  labs(x = "Critics Score" , 
       y = "Audience Score")
```

## Residuals

```{r}
#| echo: false
#| fig-align: center
ggplot(data = movie_scores, mapping = aes(x = critics,y = audience)) + 
  geom_point(alpha = 0.5) + 
  geom_smooth(method ="lm", color = "red", se = FALSE) + 
  geom_segment(aes(x = critics, xend = critics, y = audience, yend= predict(m, movie_scores)), color = "steel blue", linetype = "dotted") +
  labs(x = "Critics Score" , 
       y = "Audience Score")+
  theme(legend.position = "none")
```

$$\text{residual} = \text{observed} - \text{predicted} = y_i - \hat{y}_i$$

## Least squares line

-   The residual for the $i^{th}$ observation is

$$e_i = \text{observed} - \text{predicted}
= y_i - \hat{y}_i$$

-   The **sum of squared residuals** is

$$e^2_1 + e^2_2 + \dots + e^2_n$$

-   The **Ordinary Least Squares (OLS) line** is the one that minimizes the sum of squared residuals

## Least-squares estimate of $\hat{\beta}_0$

::: aside
[Click here](https://introregression.netlify.app/98-appendix#sec-least-sq-math) for full details on estimating $\hat{\beta}_0$ and $\hat{\beta}_1$ .
:::

```{r}
#| echo: false
sx <- round(sqrt(var(movie_scores$critics)),4)
sy <- round(sqrt(var(movie_scores$audience)),4)
r <- round(cor(movie_scores$critics, movie_scores$audience),4)
xbar <- round(mean(movie_scores$critics),4)
ybar <- round(mean(movie_scores$audience),4)
```

# Slope and intercept

## Properties of least squares regression

::: incremental
-   The regression line goes through the center of mass point, the coordinates corresponding to mean $X$ and mean $Y$: $\hat{\beta}_0 = \bar{Y} - \hat{\beta}_1\bar{X}$

-   The slope has the same sign as the correlation coefficient: $\hat{\beta}_1 = r \frac{s_Y}{s_X}$

-   The sum of the residuals is approximately zero: $\sum_{i = 1}^n e_i \approx 0$

-   The residuals and $X$ values are uncorrelated
:::

## Estimating the slope

$$\large{\hat{\beta}_1 = r \frac{s_Y}{s_X}}$$

<br>

. . .

$$
\begin{aligned} s_X = 30.1688  \hspace{15mm} &s_Y =  20.0244 \hspace{15mm} r  = 0.7814 \\[10pt]\hat{\beta}_1  &= 0.7814 \times \frac{20.0244}{30.1688} \\&= \mathbf{0.5187}\end{aligned}
$$

## Estimating the intercept

$$\large{\hat{\beta}_0 = \bar{Y} - \hat{\beta}_1\bar{X}}$$

<br>

. . .

$$
\begin{aligned}\bar{x} = 60.8493 & \hspace{15mm} \bar{y} = 63.8767 \hspace{15mm} \hat{\beta}_1 = 0.5187 \\[10pt]
\hat{\beta}_0 &= 63.8767 - 0.5187 \times 60.8493 \\
&= \mathbf{32.3142}\end{aligned}
$$

## Interpretation

::::: panel-tabset
## Question

:::: appex
::: midi
Submit your answers to the following questions on Ed Discussion:

-   The slope of the model for predicting audience score from critics score is 0.5187 . Which of the following is the best interpretation of this value?

-   32.3142 is the predicted mean audience score for what type of movies?
:::
::::

## Submit

```{=html}
<iframe allowfullscreen frameborder="0" height="100%" mozallowfullscreen style="min-width: 500px; min-height: 355px" src="https://edstem.org/us/courses/70811/discussion/714677" width="100%"></iframe>
```
:::::

ðŸ”— <https://edstem.org/us/courses/70811/discussion/714677>

## Does it make sense to interpret the intercept?

. . .

`r emo::ji("white_check_mark")` **The intercept is meaningful in the context of the data if**

-   the predictor can feasibly take values equal to or near zero, or

-   there are values near zero in the observed data.

. . .

`r emo::ji("stop_sign")` Otherwise, the intercept may not be meaningful!

# Prediction

## Making a prediction

Suppose that a movie has a critics score of 70. According to this model, what is the movie's predicted audience score?

\begin{aligned}
\widehat{\text{audience}} &= 32.3142 + 0.5187 \times \text{critics} \\
&= 32.3142 + 0.5187 \times 70 \\
&= \mathbf{68.6232}
\end{aligned}

# Linear regression in R

## Fit the model

Use the `lm()` function to fit a linear regression model

<br>

```{r}
movie_fit <- lm(audience ~ critics, data = movie_scores)
movie_fit
```

## Tidy results

Use the `tidy()` function from the **broom** R package to "tidy" the model output

<br>

```{r}
#| code-line-numbers: "|2"
movie_fit <- lm(audience ~ critics, data = movie_scores)
tidy(movie_fit)
```

## Format results

Use the `kable()` function from the **knitr** package to neatly format the results

<br>

<div>

```{r}
#| code-line-numbers: "|2,3"
movie_fit <- lm(audience ~ critics, data = movie_scores)
tidy(movie_fit) |>
  kable(digits = 3)
```

</div>

## Prediction

Use the `predict()` function to calculate predictions for new observations

<br>

**Single observation**

```{r}
new_movie <- tibble(critics = 70)
predict(movie_fit, new_movie)
```

## Prediction

Use the `predict()` function to calculate predictions for new observations

<br>

**Multiple observations**

```{r}
more_new_movies <- tibble(critics = c(24,70, 85))
predict(movie_fit, more_new_movies)
```

## Recap

-   Described how regression is used to understand the relationship between multiple variables
-   Used least squares to estimate the slope and intercept
-   Interpreted the slope and intercept for simple linear regression
-   Predicted the response given a value of the predictor

## Next time

-   Model assessment for simple linear regression

    -   Complete [Lec 03: Model Assessment prepare](../prepare/prepare-lec03.html)

-   Bring fully-charged laptop or device with keyboard for in-class application exercise (AE)
