---
title: "Multicollinearity"
author: "Prof. Maria Tackett"
date: "2025-02-27"
date-format: "MMM DD, YYYY"
footer: "[🔗 STA 221 - Spring 2025](https://sta221-sp25.netlify.app)"
logo: "../images/logo.png"
format: 
  revealjs: 
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
    include-before: [ '<script type="text/x-mathjax-config">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']
  html: 
    output-file: 13-multicollinearity-notes.html
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"
execute:
  freeze: auto
  echo: true
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

## Announcements

-   Exam corrections (optional) due Tuesday, March 4 at 11:59pm

    -   See [assignment on Canvas](https://canvas.duke.edu/courses/51767/assignments/220984)

-   Team Feedback (from TEAMMATES) due Tuesday, March 4 at 11:59pm (check email)

-   Statistics experience due April 22

## Computing set up

```{r}
#| echo: true
#| message: false

# load packages
library(tidyverse)  
library(tidymodels)  
library(knitr)       
library(patchwork)
library(GGally)   # for pairwise plot matrix
library(corrplot) # for correlation matrix

# set default theme in ggplot2
ggplot2::theme_set(ggplot2::theme_bw())
```

## Topics

-   Multicollinearity

    -   Definition

    -   How it impacts the model

    -   How to detect it

    -   What to do about it

## Data: Trail users {.midi}

-   The Pioneer Valley Planning Commission (PVPC) collected data at the beginning a trail in Florence, MA for ninety days from April 5, 2005 to November 15, 2005 to
-   Data collectors set up a laser sensor, with breaks in the laser beam recording when a rail-trail user passed the data collection station.

```{r}
#| echo: false
#| message: false
#| warning: false

rail_trail <- read_csv(here::here("slides", "data/rail_trail.csv"))
rail_trail |> slice(1:5)
```

Source: [Pioneer Valley Planning Commission](http://www.fvgreenway.org/pdfs/Northampton-Bikepath-Volume-Counts%20_05_LTA.pdf) via the **mosaicData** package.

## Variables

**Outcome**:

-   `volume` estimated number of trail users that day (number of breaks recorded)

**Predictors**

-   `hightemp` daily high temperature (in degrees Fahrenheit)

-   `avgtemp` average of daily low and daily high temperature (in degrees Fahrenheit)

-   `season` one of “Fall”, “Spring”, or “Summer”

-   `precip` measure of precipitation (in inches)

## EDA: Relationship between predictors

We can create a pairwise plot matrix using the `ggpairs` function from the **GGally** R package

```{r}
#| eval: false

rail_trail |>
  select(hightemp, avgtemp, season, precip) |>
  ggpairs()
```

## EDA: Relationship between predictors {.midi}

```{r}
#| echo: false
#| fig-align: center

rail_trail |>
  select(hightemp, avgtemp, season, precip) |>
  ggpairs()
```

## EDA: Correlation matrix

We can. use `corrplot()` in the **corrplot** R package to make a matrix of pairwise correlations between [quantitative]{.underline} predictors

```{r}
#| eval: false
correlations <- rail_trail |>
  select(hightemp, avgtemp, precip) |>
  cor()

corrplot(correlations, method = "number")
```

## EDA: Correlation matrix

```{r}
#| echo: false
#| fig-align: center

correlations <- rail_trail |>
  select(hightemp, avgtemp, precip) |>
  cor()


corrplot(correlations, method = "number")
```

::: question
What might be a potential concern with a model that uses high temperature, average temperature, season, and precipitation to predict volume?
:::

# Multicollinearity

## Multicollinearity

::: incremental
-   Ideally the predictors are orthogonal, meaning they are completely independent of one another

-   In practice, there is typically some dependence between predictors but it is often not a major issue in the model

-   If there is linear dependence among (a subset of) the predictors, we cannot find estimate $\hat{\boldsymbol{\beta}}$

-   If there are near-linear dependencies, we can find $\hat{\boldsymbol{\beta}}$ but there may be other issues with the model

-   **Multicollinearity**: near-linear dependence among predictors
:::

## Sources of multicollinearity

::: incremental
-   Data collection method - only sample from a subspace of the region of predictors

-   Constraints in the population - e.g., predictors family income and size of house

-   Choice of model - e.g., adding high order terms to the model

-   Overdefined model - have more predictors than observations
:::

::: aside
Source: @montgomery2021introduction
:::

## Detecting multicollinearity

-   The diagonal elements of $\mathbf{C} = (\mathbf{X}^\mathsf{T}\mathbf{X})^{-1}$

$$
C_{jj} = \frac{1}{1 - R^2_j}
$$

where $R^2_j$ is the proportion of variation in $x_j$ that is explained by a linear combination of all the other predictors

-   Recall $Var(\hat{\beta}_j) = \sigma^2_{\epsilon}C_{jj}$

-   Then $C_{jj}$ is called the **variance inflation factor (VIF)**, how much the linear dependencies impact the variance of the regressors

## Detecting multicollinearity

-   Common practice uses threshold $VIF > 10$ as indication of concerning multicollinearity

-   Variables with similar values of VIF are typically the ones correlated with each other

-   Use the `vif()` function in the **rms** R package to calculate VIF

## How multicollinearity impacts model

::: incremental
-   Large variance for the model coefficients that are collinear

    -   Different combinations of coefficient estimates produce equally good model fits

-   Unreliable statistical inference results

    -   May conclude coefficients are not statistically significant when there is, in fact, a relationship between the predictors and response

-   Interpretation of coefficient is no longer "holding all other variables constant", since this would be impossible for correlated predictors
:::

# Application exercise

::: appex
📋 [sta221-sp25.netlify.app/ae/ae-04-multicollinearity.html](../ae/ae-04-multicollinearity.html)

Part 1
:::

## Dealing with multicollinearity

::: incremental
-   Collect more data (often not feasible given practical constraints)

-   Redefine the correlated predictors to keep the information from predictors but eliminate collinearity

    -   e.g., if $x_1, x_2, x_3$ are correlated, use a new variable $(x_1 + x_2) / x_3$ in the model

-   For categorical predictors, avoid using levels with very few observations as the baseline

-   Remove one of the correlated variables

    -   Be careful about substantially reducing predictive power of the model
:::

# Application exercise

::: appex
📋 [sta221-sp25.netlify.app/ae/ae-04-multicollinearity.html](../ae/ae-04-multicollinearity.html)

Part 2
:::

## Recap

-   Introduced multicollinearity

    -   Definition

    -   How it impacts the model

    -   How to detect it

    -   What to do about it
