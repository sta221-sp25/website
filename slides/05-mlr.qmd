---
title: "Multiple linear regression (MLR)"
author: "Prof. Maria Tackett"
date: "2025-01-23"
date-format: "MMM DD, YYYY"
footer: "[ðŸ”— STA 221 - Spring 2025](https://sta221-sp25.netlify.app)"
logo: "../images/logo.png"
format: 
  revealjs: 
    theme: slides.scss
    multiplex: false
    transition: fade
    slide-number: true
    incremental: false 
    chalkboard: true
    include-before: [ '<script type="text/x-mathjax-config">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']
  html: 
    output-file: 05-mlr-notes.html
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"

execute:
  freeze: auto
  echo: true
knitr:
  opts_chunk: 
    R.options:      
    width: 200
bibliography: references.bib
---

## Topics

-   Introducing multiple linear regression

    -   Exploratory data analysis for multiple linear regression

    -   Fitting the least squares line

    -   Interpreting coefficients for quantitative predictors

    -   Prediction

## Computing setup

```{r packages}
#| echo: true
#| message: false

# load packages
library(tidyverse)
library(tidymodels)
library(openintro)
library(patchwork)
library(knitr)
library(kableExtra)

# set default theme and larger font size for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))
```

## Data: Peer-to-peer lender

Today's data is a sample of 50 loans made through a peer-to-peer lending club. The data is in the `loan50` data frame in the **openintro** R package.

```{r}
#| echo: false
loan50 |>
  select(annual_income, debt_to_income, verified_income, interest_rate)
```

## Variables

**Predictors**:

::: nonincremental
-   `annual_income`: Annual income
-   `debt_to_income`: Debt-to-income ratio, i.e. the percentage of a borrower's total debt divided by their total income
-   `verified_income`: Whether borrower's income source and amount have been verified (`Not Verified`, `Source Verified`, `Verified`)
:::

**Outcome**: `interest_rate`: Interest rate for the loan

## Outcome: `interest_rate`

```{r}
#| echo: false
ggplot(loan50, aes(x = interest_rate)) +
  geom_density(fill = "steelblue") +
  labs(title = "Distribution of interest rate")
```

```{r}
#| echo: false
loan50 |>
  summarise(
    Min = min(interest_rate),
    Median = median(interest_rate),
    Max = max(interest_rate),
    IQR = IQR(interest_rate)
  ) |>
  kable()
```

## Predictors {.small}

```{r}
#| echo: false
#| out.width: "100%"
p1 <- ggplot(loan50, aes(y = verified_income)) +
  geom_bar(color = "black", fill = "steelblue") +
  labs(title = "Verified Income", 
       y = "")

p2 <- ggplot(loan50, aes(x = debt_to_income)) +
  geom_histogram(binwidth = 0.25, color = "black", fill = "steelblue" ) +
  labs(title = "",
       x = "Debt to income ratio")

p3 <- ggplot(loan50, aes(x = annual_income)) +
  geom_histogram(binwidth = 20000, color = "black", fill = "steelblue") +
  labs(title = "",
       x = "Annual income")

p1 + p2 / p3
```

## Data manipulation 1: Rescale income

```{r}
#| echo: true

loan50 <- loan50 |>
  mutate(annual_income_th = annual_income / 1000)

```

```{r}
#| echo: false
#| fig-align: center

ggplot(loan50, aes(x = annual_income_th)) +
  geom_histogram(binwidth = 20, color = "black", fill = "steelblue")+
  labs(title = "Annual income (in $1000s)", 
       x = "")
```

. . .

::: question
Why did we rescale income?
:::

## Outcome vs. predictors {.small}

```{r}
#| echo: false
p4 <- ggplot(loan50, aes(x = verified_income, y = interest_rate)) +
  geom_boxplot(fill = "steelblue") +
  labs(
    y = "Interest rate",
    x = "Income verification"
  )

p5 <- ggplot(loan50, aes(x = debt_to_income, y = interest_rate)) +
  geom_point(color = "steelblue") +
  labs(
    y = NULL,
    x = "Debt to income ratio"
  )


p6 <- ggplot(loan50, aes(x = annual_income_th, y = interest_rate)) +
  geom_point(color = "steelblue") +
  labs(
    y = NULL,
    x = "Annual income (in $1000s)"
  )

p4 + p5 / p6
```

. . .

**Goal**: Use these predictors in a single model to understand variability in interest rate.

. . .

::: question
Why do we want to use a single model versus 3 separate simple linear regression models?
:::

# Multiple linear regression (MLR)

## Multiple linear regression (MLR)

Based on the analysis goals, we will use a **multiple linear regression** model of the following form

$$
\begin{aligned}\text{interest_rate} ~ = 
\beta_0 & + \beta_1 ~ \text{debt_to_income} \\ & + \beta_2 ~ \text{verified_income} \\ &+ \beta_3~ \text{annual_income_th} \\
& +\epsilon, \quad \epsilon \sim N(0, \sigma^2_{\epsilon})
\end{aligned}
$$

## Multiple linear regression

**Recall:** The simple linear regression model

$$
Y = \beta_0 + \beta_1~ X + \epsilon
$$

. . .

The form of the multiple linear regression model is

$$
Y = \beta_0 + \beta_1X_1 +  \dots + \beta_pX_p + \epsilon
$$

<br>

. . .

Therefore,

$$
E(Y|X_1, \ldots, X_p) = \beta_0 + \beta_1X_1 +  \dots + \beta_pX_p
$$

## Fitting the least squares line

Similar to simple linear regression, we want to find estimates for $\beta_0, \beta_1, \ldots, \beta_p$ that minimize

$$
\sum_{i=1}^{n}\epsilon_i^2 = \sum_{i=1}^n[y_i - \hat{y}_i]^2 = \sum_{i=1}^n[y_i - (\beta_0 + \beta_1x_{i1} + \dots + \beta_px_{ip})]^2
$$

<br>

. . .

The calculations can be very tedious, especially if $p$ is large

## Matrix form of multiple linear regression

Suppose we have $n$ observations, a quantitative response variable, and $p$ \> 1 predictors $$
\underbrace{
\begin{bmatrix}
y_1 \\
\vdots \\
y_n
\end{bmatrix} }_
{\mathbf{y}} \hspace{3mm}
= 
\hspace{3mm}
\underbrace{
\begin{bmatrix}
1 &x_{11} & \dots & x_{1p}\\
\vdots & \vdots &\ddots & \vdots \\
1 &  x_{n1} & \dots &x_{np}
\end{bmatrix}
}_{\mathbf{X}}
\hspace{2mm}
\underbrace{
\begin{bmatrix}
\beta_0 \\
\beta_1 \\
\vdots \\
\beta_p
\end{bmatrix}
}_{\boldsymbol{\beta}}
\hspace{3mm}
+
\hspace{3mm}
\underbrace{
\begin{bmatrix}
\epsilon_1 \\
\vdots\\
\epsilon_n
\end{bmatrix}
}_\boldsymbol{\epsilon}
$$

::: question
What are the dimensions of $\mathbf{y}$, $\mathbf{X}$, $\boldsymbol{\beta}$, $\boldsymbol{\epsilon}$?
:::

## Matrix form of multiple linear regression

As with simple linear regression, we have

$$
\mathbf{Y} = \mathbf{X}\boldsymbol{\beta} + \boldsymbol{\epsilon}
$$

. . .

Generalizing the derivations from SLR to $p > 2$, we have

$$
\hat{\boldsymbol{\beta}} = (\mathbf{X}^
 \mathsf{T}\mathbf{X})^{-1}\mathbf{X}^\mathsf{T}\mathbf{y}
$$

as before.

## Model fit in R

```{r}
#| echo: true

int_fit <- lm(interest_rate ~ debt_to_income + verified_income  + annual_income_th,
              data = loan50)

tidy(int_fit) |>
  kable(digits = 3)
```

## Model equation

$$
\begin{align}\hat{\text{interest_rate}} =  10.726 &+0.671 \times \text{debt_to_income}\\
&+ 2.211 \times \text{source_verified}\\  
&+ 6.880 \times \text{verified}\\
& -0.021 \times \text{annual_income_th}
\end{align}
$$

::: callout-note
We will talk about why there are only two terms in the model for `verified_income` soon!
:::

## Interpreting $\hat{\beta}_j$

-   The estimated coefficient $\hat{\beta}_j$ is the expected change in the mean of $Y$ when $X_j$ increases by one unit, <i><b>holding the values of all other predictor variables constant</b></i>.

. . .

-   **Example:** The estimated coefficient for `debt_to_income` is 0.671. This means for each point in an borrower's debt to income ratio, the interest rate on the loan is expected to be greater by 0.671%, on average, holding annual income and income verification constant.

## Interpreting $\hat{\beta}_j$

::: question
The estimated coefficient for `annual_income_th` is -0.021. Interpret this coefficient in the context of the data.
:::

<br>

<!--# Make ed discussion poll-->

::: question
Why do we need to include a statement about holding all other predictors constant?
:::

## Interpreting $\hat{\beta}_0$

```{r}
#| echo: false
tidy(int_fit, conf.int = TRUE) |>
  kable(digits = 3)
```

. . .

:::: question
::: midi
Describe the subset of borrowers who are expected to get an interest rate of 10.726% based on our model. Is this interpretation meaningful? Why or why not?
:::
::::

## Prediction

::: question
What is the predicted interest rate for an borrower with an debt-to-income ratio of 0.558, whose income is not verified, and who has an annual income of \$59,000?
:::

<br>

```{r}
#| echo: true

10.726 + 0.671 * 0.558 + 2.211 * 0 + 6.880 * 0 - 0.021 * 59

```

. . .

The predicted interest rate for an borrower with with an debt-to-income ratio of 0.558, whose income is not verified, and who has an annual income of \$59,000 is `r round(10.726 + 0.671 * 0.558 + 2.211 * 0 + 6.880 * 0 - 0.021 * 59,2)`%.

## Prediction in R {.midi}

Just like with simple linear regression, we can use the `predict()` function in R to calculate the appropriate intervals for our predicted values:

```{r}
#| echo: true

new_borrower <- tibble(
  debt_to_income  = 0.558, 
  verified_income = "Not Verified", 
  annual_income_th = 59
)

predict(int_fit, new_borrower)
```

::: callout-note
Difference in predicted value due to rounding the coefficients on the previous slide.
:::

## Cautions

-   **Do not extrapolate!** Because there are multiple predictor variables, there is the potential to extrapolate in many directions
-   The multiple regression model only shows **association, not causality**
    -   To show causality, you must have a carefully designed experiment or carefully account for confounding variables in an observational study

## Recap

-   Showed exploratory data analysis for multiple linear regression

-   Used least squares to fit the regression line

-   Interpreted the coefficients for quantitative predictors

-   Predicted the response for new observations
