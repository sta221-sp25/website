{
  "hash": "6a91b71638562f9de6e22b5b46e29add",
  "result": {
    "markdown": "---\ntitle: \"Lab: Project Proposal\"\nauthor: \"Oct 27 - 28, 2022\"\nfooter: \"[ðŸ”— Week 09](https://sta210-fa22.netlify.app/weeks/week-09.html)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\nexecute:\n  freeze: auto\n  echo: false\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n# Welcome\n\n## Goals\n\n-   Review models with log-transformed response or predictor variables\n-   Project proposal\n\n# Models with log-transformed variables\n\n## Movies data {.midi}\n\nThe goal of this analysis is to predict the total gross revenue of a movie using opening weekend statistics. The data set includes movies released in the U.S. in 2009 that opened on 500 or more theater screens. The data were obtained from *Handbook of Regression Analysis.*\n\nThe variables we'll use are\n\n-   `TotalGross`: Total US gross revenue in millions of dollars\n\n-   `Opening`: opening weekend gross revenue in millions of dollars\n\n-   `Screens`: the number of screens on which the movie opened\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Exploratory data analysis\n\nBelow are the distributions and measure of center for the response and each predictor variable.\n\n::: {.columns width=\"33%\"}\n::: {.column width=\"33%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lab-project-proposal_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=90%}\n:::\n\n::: {.cell-output-display}\n|  mean| median|\n|-----:|------:|\n| 77.03|  42.67|\n:::\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lab-project-proposal_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=90%}\n:::\n\n::: {.cell-output-display}\n|  mean| median|\n|-----:|------:|\n| 23.33|  15.83|\n:::\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lab-project-proposal_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=90%}\n:::\n\n::: {.cell-output-display}\n|    mean| median|\n|-------:|------:|\n| 2751.55|   2756|\n:::\n:::\n\n:::\n:::\n\n## Log-transformed response variable {.small}\n\nWe'll start by considering the following model with a log-transformed response variable. Note that `OpeningCent` and `ScreenCent` are the mean-centered version of `Opening` and `Screens.`\n\n\n$$\n\\log(TotalGross) = \\beta_0 + \\beta_1 \\times OpeningCent + \\beta_2 \\times ScreensCent + \\epsilon \\hspace{8mm} \\epsilon \\sim N(0, \\sigma^2_{\\epsilon})\n$$\n\n\n. . .\n\nThe model output is below:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   3.8470|    0.0420|   91.6190|       0|\n|OpeningCent |   0.0251|    0.0026|    9.6891|       0|\n|ScreensCent |   0.0005|    0.0001|    6.1691|       0|\n:::\n:::\n\n\n<br>\n\n. . .\n\n::: question\n-   Interpret the intercept in the context of the data.\n\n-   Interpret the effect of `Opening` in the context of the data.\n:::\n\n## Log-transformed predictor variable {.small}\n\nNext let's consider the following model with a log-transformed predictor. Note that `OpeningCent` and `ScreenCent` are the mean-centered version of `Opening` and `Screens.`\n\n\n$$TotalGross = \\beta_0 + \\beta_1 \\times \\log(OpeningCent) + \\beta_2 \\times ScreensCent + \\epsilon \\hspace{8mm} \\epsilon \\sim N(0, \\sigma^2_{\\epsilon})\n$$\n\n\n. . .\n\nThe model output is below:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n|term             | estimate| std.error| statistic| p.value|\n|:----------------|--------:|---------:|---------:|-------:|\n|(Intercept)      |  57.8738|   27.3014|    2.1198|  0.0400|\n|log(OpeningCent) |  31.2932|   11.0651|    2.8281|  0.0071|\n|ScreensCent      |   0.0483|    0.0368|    1.3119|  0.1967|\n:::\n:::\n\n\n<br>\n\n. . .\n\n::: question\n-   Interpret the intercept in the context of the data.\n\n-   Interpret the effect of a 10% increase in `Opening` in the context of the data.\n:::\n\n# Project proposal\n\n## Project proposal\n\n-   Choose one of the usable data sets proposed in the Topic Ideas\n\n-   [Click here](https://sta210-fa22.netlify.app/project-instructions.html#project-proposal) for proposal instructions\n",
    "supporting": [
      "lab-project-proposal_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}