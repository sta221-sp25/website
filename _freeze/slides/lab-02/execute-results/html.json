{
  "hash": "44581cd3ab4d7df202c52a29af89f2b6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Lab 02\"\nsubtitle: \"Linear regression\"\ndate: \"January 24, 2025\"\ndate-format: long\nfooter: \"[ðŸ”— STA 221 - Spring 2025](https://sta221-sp25.netlify.app)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs: \n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    include-before: [ '<script type=\"text/x-mathjax-config\">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\n---\n\n\n\n# Welcome\n\n## Goals\n\n-   LaTex in this course\n-   Lab 02: Linear regression\n\n## LaTex in this class\n\nFor this class you will need to be able to...\n\n-   Properly write mathematical symbols, e.g., $\\beta_1$ not *B1,* $R^2$ not *R2*\n\n-   Write basic regression equations, e.g., $\\hat{y} = \\beta_0 + \\beta_1x_1 + \\beta_2x_2$\n\n-   Write matrix equations: $\\mathbf{y} = \\mathbf{X}\\boldsymbol{\\beta} + \\boldsymbol{\\epsilon}$\n\n-   Write hypotheses (we'll start this next week), e.g., $H_0: \\beta = 0$\n\nYou are welcome to but <u>not</u> required to write math proofs using LaTex.\n\n## Writing LaTex {.midi}\n\n**Inline:** Your mathematics will display within the line of text.\n\n-   Use `$` to start and end your LaTex syntax. You can also use the menu: *Insert -\\> LaTex Math -\\> Inline Math*.\n\n-   *Example*: The text `The linear regression model is $\\mathbf{y} = \\mathbf{X}\\boldsymbol{\\beta} + \\boldsymbol{\\epsilon}$` produces\n\n    The linear regression model is $\\mathbf{y} = \\mathbf{X}\\boldsymbol{\\beta} + \\boldsymbol{\\epsilon}$\n\n## Writing LaTex {.midi}\n\n**Display:** Your mathematics will display outside the line of text\n\n-   Use a `$$` to start and end your LaTex syntax. You can also use the menu: *Insert -\\> LaTex Math -\\> Display Math*.\n\n-   *Example*: The text `The estimated regression equation is $$\\hat{\\mathbf{y}} = \\mathbf{X}\\hat{\\boldsymbol{\\beta}}$$` produces\n\n    The estimated regression equation is\n\n$$\n\\hat{\\mathbf{y}} = \\mathbf{X}\\hat{\\boldsymbol{\\beta}}\n$$\n\n::: callout-tip\n[Click here](https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols) for a quick reference of LaTex code.\n:::\n\n## Lab 02: Linear regression\n\nTodayâ€™s lab focuses on using simple and multiple linear regression to understand variability in coffee quality ratings.\n\n<br>\n\nðŸ”— [sta221-sp25.netlify.app/labs/lab-02.html](../labs/lab-02.html)\n",
    "supporting": [
      "lab-02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}