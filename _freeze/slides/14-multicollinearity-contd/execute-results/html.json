{
  "hash": "b0e4c6766c32743998e9ad7d5e257154",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multicollinearity cont'd\"\nauthor: \"Prof. Maria Tackett\"\ndate: \"2025-03-04\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[🔗 STA 221 - Spring 2025](https://sta221-sp25.netlify.app)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs: \n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    include-before: [ '<script type=\"text/x-mathjax-config\">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']\n  html: \n    output-file: 14-multicollinearity-contd-notes.html\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n## Announcements\n\n-   Exam corrections (optional) due TODAY at 11:59pm\n\n    -   See [assignment on Canvas](https://canvas.duke.edu/courses/51767/assignments/220984)\n\n-   Team Feedback (email from TEAMMATES) due TODAY at 11:59pm (check email)\n\n-   Next project milestone: Exploratory data analysis due March 20\n\n    -   Work on it in lab March 7\n\n-   DataFest: April 4 - 6 - <https://dukestatsci.github.io/datafest/>\n\n## Computing set up\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)  \nlibrary(tidymodels)  \nlibrary(knitr)       \nlibrary(patchwork)\nlibrary(GGally)   # for pairwise plot matrix\nlibrary(corrplot) # for correlation matrix\n\n# set default theme in ggplot2\nggplot2::theme_set(ggplot2::theme_bw())\n```\n:::\n\n\n\n\n## Topics\n\n-   Multicollinearity\n\n    -   Recap\n\n    -   How to deal with issues of multicollinearity\n\n## Data: Trail users {.midi}\n\n-   The Pioneer Valley Planning Commission (PVPC) collected data at the beginning a trail in Florence, MA for ninety days from April 5, 2005 to November 15, 2005.\n-   Data collectors set up a laser sensor, with breaks in the laser beam recording when a rail-trail user passed the data collection station.\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  volume hightemp avgtemp season cloudcover precip day_type\n   <dbl>    <dbl>   <dbl> <chr>       <dbl>  <dbl> <chr>   \n1    501       83    66.5 Summer       7.60  0     Weekday \n2    419       73    61   Summer       6.30  0.290 Weekday \n3    397       74    63   Spring       7.5   0.320 Weekday \n4    385       95    78   Summer       2.60  0     Weekend \n5    200       44    48   Spring      10     0.140 Weekday \n```\n\n\n:::\n:::\n\n\n\n\nSource: [Pioneer Valley Planning Commission](http://www.fvgreenway.org/pdfs/Northampton-Bikepath-Volume-Counts%20_05_LTA.pdf) via the **mosaicData** package.\n\n## Variables\n\n**Outcome**:\n\n-   `volume` estimated number of trail users that day (number of breaks recorded)\n\n**Predictors**\n\n-   `hightemp` daily high temperature (in degrees Fahrenheit)\n\n-   `avgtemp` average of daily low and daily high temperature (in degrees Fahrenheit)\n\n-   `season` one of “Fall”, “Spring”, or “Summer”\n\n-   `precip` measure of precipitation (in inches)\n\n## EDA: Relationship between predictors {.midi}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](14-multicollinearity-contd_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n## Multicollinearity {.midi}\n\n-   **Multicollinearity**: near-linear dependence among predictors\n\n-   The **variance inflation factor (VIF)** measures how much the linear dependencies impact the variance of the predictors\n\n$$\nVIF_{j} = \\frac{1}{1 - R^2_j}\n$$\n\nwhere $R^2_j$ is the proportion of variation in $x_j$ that is explained by a linear combination of all the other predictors\n\n-   Thresholds:\n    -   VIF \\> 10: concerning multicollinearity\n    -   VIF \\> 5: potentially worth further investigation\n\n## How multicollinearity impacts model {.midi}\n\n-   Large variance for the model coefficients that are collinear\n\n    -   Different combinations of coefficient estimates produce equally good model fits\n\n-   Unreliable statistical inference results\n\n    -   May conclude coefficients are not statistically significant when there is, in fact, a relationship between the predictors and response\n\n-   Interpretation of coefficient is no longer \"holding all other variables constant\", since this would be impossible for correlated predictors\n\n## Dealing with multicollinearity\n\n::: incremental\n-   Collect more data (often not feasible given practical constraints)\n\n-   Redefine the correlated predictors to keep the information from predictors but eliminate collinearity\n\n    -   e.g., if $x_1, x_2, x_3$ are correlated, use a new variable $(x_1 + x_2) / x_3$ in the model\n\n-   For categorical predictors, avoid using levels with very few observations as the baseline\n\n-   Remove one of the correlated variables\n\n    -   Be careful about substantially reducing predictive power of the model\n:::\n\n# Application exercise\n\n::: appex\n📋 [sta221-sp25.netlify.app/ae/ae-04-multicollinearity.html](../ae/ae-04-multicollinearity.html)\n\nPart 2\n:::\n",
    "supporting": [
      "14-multicollinearity-contd_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}