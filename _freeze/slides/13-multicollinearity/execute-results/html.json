{
  "hash": "e0903ace7bd730758acae6cbae46ffb5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multicollinearity\"\nauthor: \"Prof. Maria Tackett\"\ndate: \"2025-02-27\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[🔗 STA 221 - Spring 2025](https://sta221-sp25.netlify.app)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs: \n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\n    include-before: [ '<script type=\"text/x-mathjax-config\">MathJax.Hub.Config({tex2jax: {enableAssistiveMml: false}});</script>']\n  html: \n    output-file: 13-multicollinearity-notes.html\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n## Announcements\n\n-   Exam corrections (optional) due Tuesday, March 4 at 11:59pm\n\n    -   See [assignment on Canvas](https://canvas.duke.edu/courses/51767/assignments/220984)\n\n-   Team Feedback (from TEAMMATES) due Tuesday at 11:59pm (check email)\n\n-   Statistics experience due April 22\n\n    -   DataFest announcement\n\n## Computing set up\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)  \nlibrary(tidymodels)  \nlibrary(knitr)       \nlibrary(patchwork)\nlibrary(GGally) #for pairwise plot matrix\n\n\n# set default theme in ggplot2\nggplot2::theme_set(ggplot2::theme_bw())\n```\n:::\n\n\n\n\n## Topics\n\n-   Multicollinearity\n\n    -   Definition\n\n    -   How it impacts the model\n\n    -   How to detect it\n\n    -   What to do about it\n\n## Data: Trail users {.midi}\n\n-   The Pioneer Valley Planning Commission (PVPC) collected data at the beginning a trail in Florence, MA for ninety days from April 5, 2005 to November 15, 2005 to\n-   Data collectors set up a laser sensor, with breaks in the laser beam recording when a rail-trail user passed the data collection station.\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 7\n  volume hightemp avgtemp season cloudcover precip day_type\n   <dbl>    <dbl>   <dbl> <chr>       <dbl>  <dbl> <chr>   \n1    501       83    66.5 Summer       7.60  0     Weekday \n2    419       73    61   Summer       6.30  0.290 Weekday \n3    397       74    63   Spring       7.5   0.320 Weekday \n4    385       95    78   Summer       2.60  0     Weekend \n5    200       44    48   Spring      10     0.140 Weekday \n```\n\n\n:::\n:::\n\n\n\n\nSource: [Pioneer Valley Planning Commission](http://www.fvgreenway.org/pdfs/Northampton-Bikepath-Volume-Counts%20_05_LTA.pdf) via the **mosaicData** package.\n\n## Variables\n\n**Outcome**:\n\n-   `volume` estimated number of trail users that day (number of breaks recorded)\n\n**Predictors**\n\n-   `hightemp` daily high temperature (in degrees Fahrenheit)\n\n-   `avgtemp` average of daily low and daily high temperature (in degrees Fahrenheit)\n\n-   `season` one of “Fall”, “Spring”, or “Summer”\n\n-   `precip` measure of precipitation (in inches)\n\n## EDA: Relationship between predictors\n\nWe can create a pairwise plot matrix using the `ggpairs` function from the **GGally** R package\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrail_trail |>\n  select(hightemp, avgtemp, season, precip) |>\n  ggpairs()\n```\n:::\n\n\n\n\n## EDA: Relationship between predictors {.midi}\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](13-multicollinearity_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n::: question\nWhat might be a potential concern with a model that uses high temperature, average temperature, season, and precipitation to predict volume?\n:::\n\n# Multicollinearity\n\n## Multicollinearity\n\n-   Ideally there is no linear relationship (dependence) between the predictors\n\n    -   This is generally not the case in practice but is often not a major issue\n\n-   **Multicollinearity**: there are near-linear dependencies between predictors\n\n## Common sources of multicollinearity\n\n::: incremental\n-   Dependencies that generally occur in the population\n\n-   How the model is defined and the variables that are included\n\n-   Sample comes from only a subspace of the region of predictors\n\n-   There are more predictor variables than observations\n:::\n\n## Detecting multicollinearity\n\n-   **Variance Inflation Factor (VIF)**: measure of multicollinearity in the regression model\n\n$$\nVIF_j = \\frac{1}{1 - R^2_j}\n$$\n\nwhere $R^2_j$ is the proportion of variation in $x_j$ that is explained by a linear combination of all the other predictors\n\n## Detecting multicollinearity\n\n-   Common practice uses threshold $VIF > 10$ as indication of concerning multicollinearity\n\n-   Variables with similar values of VIF are typically the ones correlated with each other\n\n-   Use the `vif()` function in the **rms** R package to calculate VIF\n\n## Effects of multicollinearity\n\n::: incremental\n-   Large variance $(\\hat{\\sigma}^2_{\\epsilon}(\\mathbf{X}^T\\mathbf{X})^{-1})$ in the model coefficients\n\n    -   Different combinations of coefficient estimates produce equally good model fits\n\n-   Unreliable statistical inference results\n\n    -   May conclude coefficients are not statistically significant when there is, in fact, a relationship between the predictors and response\n\n-   Interpretation of coefficient is no longer \"holding all other variables constant\", since this would be impossible for correlated predictors\n:::\n\n# Application exercise\n\n::: appex\n📋 [sta221-fa24.netlify.app/ae/ae-05-multicollinearity](../ae/ae-05-multicollinearity.html)\n:::\n\nSelected groups - put responses on your [Google slide](https://docs.google.com/presentation/d/1pFjNKtvyMo7rd0RJFVNvJf6UcRVsFnXeW4qWOMNeTdU/edit?usp=sharing).\n\n## Dealing with multicollinearity\n\n::: incremental\n-   Collect more data (often not feasible given practical constraints)\n\n-   Redefine the correlated predictors to keep the information from predictors but eliminate collinearity\n\n    -   e.g., if $x_1, x_2, x_3$ are correlated, use a new variable $(x_1 + x_2) / x_3$ in the model\n\n-   For categorical predictors, avoid using levels with very few observations as the baseline\n\n-   Remove one of the correlated variables\n\n    -   Be careful about substantially reducing predictive power of the model\n:::\n\n# Application exercise\n\n::: appex\n📋 [sta221-fa24.netlify.app/ae/ae-05-multicollinearity](../ae/ae-05-multicollinearity.html)\n:::\n\nSelected groups - put responses on your [Google slide](https://docs.google.com/presentation/d/1pFjNKtvyMo7rd0RJFVNvJf6UcRVsFnXeW4qWOMNeTdU/edit?usp=sharing).\n\n## Recap\n\n-   Introduced multicollinearity\n\n    -   Definition\n\n    -   How it impacts the model\n\n    -   How to detect it\n\n    -   What to do about it\n",
    "supporting": [
      "13-multicollinearity_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}