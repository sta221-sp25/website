{
  "hash": "5ee06cb3af1388a154ebb872e1ad1ad9",
  "result": {
    "markdown": "---\ntitle: \"Feature engineering\"\nauthor: \"Prof. Maria Tackett\"\ndate: \"2023-10-09\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[ðŸ”— STA 210 - Fall 2023 -  Schedule](https://sta210-fa23.netlify.app/schedule)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: false\n    incremental: false \n    chalkboard: true\nhtml-math-method:\n  method: mathjax\n  url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n\n## Announcements\n\n-   Group labs resume this week\n\n-   Prof. Tackett will not have office hours on Friday\n\n    -   Email to schedule an appointment if you need to meet\n\n    -   All other office hours on regular schedule\n\n## Statistician of the day: **Rafael Irizarry** {.small}\n\n::: columns\n::: {.column width=\"50%\"}\n*Dr. Rafael Irizarry is a Professor of Biostatistics at the Harvard T.H. Chan School of Public Health and Professor of Biostatistics and Computational Biology at the Dana-Farber Cancer Institute. He earned a Bachelor of Science degree in Mathematics from the University of Puerto Rico at Rio Piedras and a PhD from the University of California, Berkeley in Statistics. Dr. Irizarry's work is highly cited, and he has been given many prestigious awards including the Presidents' Award given by the Committee of Presidents of Statistical Societies.*\n:::\n\n::: {.column width=\"50%\"}\n![](images/statistician-of-the-day/irizarry.jpg){fig-alt=\"Picture of Rafael Irizarry\" fig-align=\"left\" width=\"70%\"}\n:::\n:::\n\nSource: [hardin47.github.io/CURV/scholars/irizarry](https://hardin47.github.io/CURV/scholars/irizarry.html)\n\n## Work on impacts of Hurricane Maria {.midi}\n\n-   Part of a team that used stratified sampling to survey residents in Puerto Rico about the impacts of the 2017 Hurricane Maria\n-   Estimated percent of population who lost access to services, such as electricity and water, and the association with remoteness\n-   Used confidence intervals to estimate deaths that were directly and indirectly attributable to the hurricane\n    -   Their estimate was more than 70 times the official count\n\n**Article:** Kishore, N., MarquÃ©s, D., Mahmud, A., Kiang, M. V., Rodriguez, I., Fuller, A., \\... & Buckee, C. O. (2018). [Mortality in Puerto Rico after Hurricane Maria](https://www.nejm.org/doi/full/10.1056/nejmsa1803972). *New England journal of medicine*, *379*(2), 162-170.\n\n**GitHub repo:** [github.com/c2-d2/pr_mort_official](https://github.com/c2-d2/pr_mort_official)\n\n# Categorical predictors, interactions, & feature engineering\n\n## Topics\n\n-   Understanding categorical predictors and interaction terms\n\n-   Feature engineering\n\n## Computational setup\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)\nlibrary(patchwork)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(colorblindr)\nlibrary(gghighlight)\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_bw(base_size = 16))\n```\n:::\n\n\n# Types of predictors\n\n## Data: Peer-to-peer lender\n\nToday's data is a sample of 50 loans made through a peer-to-peer lending club. The data is in the `loan50` data frame in the **openintro** R package.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 50 Ã— 4\n   annual_income debt_to_income verified_income interest_rate\n           <dbl>          <dbl> <fct>                   <dbl>\n 1         59000         0.558  Not Verified            10.9 \n 2         60000         1.31   Not Verified             9.92\n 3         75000         1.06   Verified                26.3 \n 4         75000         0.574  Not Verified             9.92\n 5        254000         0.238  Not Verified             9.43\n 6         67000         1.08   Source Verified          9.92\n 7         28800         0.0997 Source Verified         17.1 \n 8         80000         0.351  Not Verified             6.08\n 9         34000         0.698  Not Verified             7.97\n10         80000         0.167  Source Verified         12.6 \n# â„¹ 40 more rows\n```\n:::\n:::\n\n\n## Variables\n\n**Predictors**:\n\n::: nonincremental\n-   `annual_income`: Annual income\n-   `debt_to_income`: Debt-to-income ratio, i.e. the percentage of a borrower's total debt divided by their total income\n-   `verified_income`: Whether borrower's income source and amount have been verified (`Not Verified`, `Source Verified`, `Verified`)\n:::\n\n**Response**: `interest_rate`: Interest rate for the loan\n\n## Response: `interest_rate`\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=3000}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> min </th>\n   <th style=\"text-align:right;\"> median </th>\n   <th style=\"text-align:right;\"> max </th>\n   <th style=\"text-align:right;\"> iqr </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 5.31 </td>\n   <td style=\"text-align:right;\"> 9.93 </td>\n   <td style=\"text-align:right;\"> 26.3 </td>\n   <td style=\"text-align:right;\"> 5.755 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Predictors {.small}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n## Data manipulation 1: Rescale income\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nloan50 <- loan50 |>\n  mutate(annual_income_th = annual_income / 1000)\n\nggplot(loan50, aes(x = annual_income_th)) +\n  geom_histogram(binwidth = 20) +\n  labs(title = \"Annual income (in $1000s)\", \n       x = \"\")\n```\n\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Data manipulation 2: Mean-center numeric predictors\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nloan50 <- loan50 |>\n  mutate(\n    debt_inc_cent = debt_to_income - mean(debt_to_income), \n    annual_income_th_cent = annual_income_th - mean(annual_income_th)\n    )\n```\n:::\n\n\n## Data manipulation 3: Create indicator variables for `verified_income`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nloan50 <- loan50 |>\n  mutate(\n    not_verified = if_else(verified_income == \"Not Verified\", 1, 0),\n    source_verified = if_else(verified_income == \"Source Verified\", 1, 0),\n    verified = if_else(verified_income == \"Verified\", 1, 0)\n  )\n```\n:::\n\n\n## Interest rate vs. annual income\n\nThe lines are not parallel indicating there is an **interaction effect**. The slope of annual income differs based on the income verification.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Data manipulation 4: Create interaction variables {.smaller}\n\nDefining the interaction variable in the model formula as `verified_income * annual_income_th_cent` is an implicit data manipulation step as well\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output .cell-output-stdout}\n```\nRows: 50\nColumns: 9\n$ `(Intercept)`                                          <dbl> 1, 1, 1, 1, 1, â€¦\n$ debt_inc_cent                                          <dbl> -0.16511719, 0.â€¦\n$ annual_income_th_cent                                  <dbl> -27.17, -26.17,â€¦\n$ `verified_incomeNot Verified`                          <dbl> 1, 1, 0, 1, 1, â€¦\n$ `verified_incomeSource Verified`                       <dbl> 0, 0, 0, 0, 0, â€¦\n$ verified_incomeVerified                                <dbl> 0, 0, 1, 0, 0, â€¦\n$ `annual_income_th_cent:verified_incomeNot Verified`    <dbl> -27.17, -26.17,â€¦\n$ `annual_income_th_cent:verified_incomeSource Verified` <dbl> 0.00, 0.00, 0.0â€¦\n$ `annual_income_th_cent:verified_incomeVerified`        <dbl> 0.00, 0.00, -11â€¦\n```\n:::\n:::\n\n\n## Interaction term in the model {.midi}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nint_cent_int_fit <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(interest_rate ~ debt_inc_cent  +  verified_income + \n        annual_income_th_cent + verified_income * annual_income_th_cent,\n      data = loan50)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 9.484 </td>\n   <td style=\"text-align:right;\"> 0.989 </td>\n   <td style=\"text-align:right;\"> 9.586 </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> debt_inc_cent </td>\n   <td style=\"text-align:right;\"> 0.691 </td>\n   <td style=\"text-align:right;\"> 0.685 </td>\n   <td style=\"text-align:right;\"> 1.009 </td>\n   <td style=\"text-align:right;\"> 0.319 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> verified_incomeSource Verified </td>\n   <td style=\"text-align:right;\"> 2.157 </td>\n   <td style=\"text-align:right;\"> 1.418 </td>\n   <td style=\"text-align:right;\"> 1.522 </td>\n   <td style=\"text-align:right;\"> 0.135 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> verified_incomeVerified </td>\n   <td style=\"text-align:right;\"> 7.181 </td>\n   <td style=\"text-align:right;\"> 1.870 </td>\n   <td style=\"text-align:right;\"> 3.840 </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> annual_income_th_cent </td>\n   <td style=\"text-align:right;\"> -0.007 </td>\n   <td style=\"text-align:right;\"> 0.020 </td>\n   <td style=\"text-align:right;\"> -0.341 </td>\n   <td style=\"text-align:right;\"> 0.735 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;background-color: #dce5b2 !important;\"> verified_incomeSource Verified:annual_income_th_cent </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> -0.016 </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> 0.026 </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> -0.643 </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> 0.523 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;background-color: #dce5b2 !important;\"> verified_incomeVerified:annual_income_th_cent </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> -0.032 </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> 0.033 </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> -0.979 </td>\n   <td style=\"text-align:right;background-color: #dce5b2 !important;\"> 0.333 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Interpreting interaction terms\n\n-   What the interaction means: The effect of annual income on the interest rate differs by -0.016 when the income is source verified compared to when it is not verified, holding all else constant.\n-   Interpreting `annual_income` for source verified: If the income is source verified, we expect the interest rate to decrease by 0.023% (-0.007 + -0.016) for each additional thousand dollars in annual income, holding all else constant.\n\n## Understanding the model {.midi}\n\n$$\n\\begin{aligned}\n\\hat{interest\\_rate} &= 9.484 + 0.691 \\times debt\\_inc\\_cent\\\\ &- 0.007 \\times annual\\_income\\_th\\_cent \\\\ &+ 2.157 \\times SourceVerified + 7.181 \\times Verified \\\\ &- 0.016 \\times annual\\_inc\\_th\\_cent \\times SourceVerified\\\\ &- 0.032 \\times annual\\_inc\\_th\\_cent \\times Verified\n\\end{aligned}\n$$\n\n::: question\n1.  What is $p$, the number of predictor terms in the model?\n2.  Write the equation of the model to predict interest rate for applicants with *Not Verified* income.\n3.  Write the equation of the model to predict interest rate for applicants with *Verified* income.\n:::\n\n# Feature engineering\n\n# Introduction\n\n## The Office\n\n![](images/11/the-office.jpeg){fig-alt=\"Photo of the main characters from the television show \\\"The Office\\\"\" fig-align=\"center\"}\n\n## Data\n\nThe data come from [data.world](https://data.world/anujjain7/the-office-imdb-ratings-dataset), by way of [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-03-17/readme.md)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_ratings <- read_csv(\"data/office_ratings.csv\")\noffice_ratings\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 188 Ã— 6\n   season episode title             imdb_rating total_votes air_date  \n    <dbl>   <dbl> <chr>                   <dbl>       <dbl> <date>    \n 1      1       1 Pilot                     7.6        3706 2005-03-24\n 2      1       2 Diversity Day             8.3        3566 2005-03-29\n 3      1       3 Health Care               7.9        2983 2005-04-05\n 4      1       4 The Alliance              8.1        2886 2005-04-12\n 5      1       5 Basketball                8.4        3179 2005-04-19\n 6      1       6 Hot Girl                  7.8        2852 2005-04-26\n 7      2       1 The Dundies               8.7        3213 2005-09-20\n 8      2       2 Sexual Harassment         8.2        2736 2005-09-27\n 9      2       3 Office Olympics           8.4        2742 2005-10-04\n10      2       4 The Fire                  8.4        2713 2005-10-11\n# â„¹ 178 more rows\n```\n:::\n:::\n\n\n## IMDB ratings\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## IMDB ratings vs. number of votes\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## Outliers\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## IMDB ratings vs. air date\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n## IMDB ratings vs. seasons\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](11-feature-engineering_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=3000}\n:::\n:::\n\n\n# Modeling\n\n## Spending our data\n\n-   There are several steps to create a useful model: parameter estimation, model selection, performance assessment, etc.\n\n-   Doing all of this on the entire data we have available leaves us with no other data to assess our choices\n\n-   We can allocate specific subsets of data for different tasks, as opposed to allocating the largest possible amount to the model parameter estimation only (which is what we've done so far)\n\n## Splitting the data\n\n-   Take a random sample of X% of the data and set aside (**testing data**)\n    -   Typically 10 - 20%\n-   Fit a model on the remaining Y% of the data (**training data**)\n    -   Typically 80 - 90%\n-   Use the coefficients from the model fit on training data to make predictions and evaluate performance on the testing data\n\n## Train / test\n\n**Step 1:** Create an initial split:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(123)\noffice_split <- initial_split(office_ratings, prop = 0.75) # prop = 0.75 by default\n```\n:::\n\n\n. . .\n\n<br>\n\n**Step 2:** Save training data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_train <- training(office_split)\ndim(office_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 141   6\n```\n:::\n:::\n\n\n. . .\n\n<br>\n\n**Step 3:** Save testing data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_test  <- testing(office_split)\ndim(office_test)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 47  6\n```\n:::\n:::\n\n\n## Training data\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_train\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 141 Ã— 6\n   season episode title               imdb_rating total_votes air_date  \n    <dbl>   <dbl> <chr>                     <dbl>       <dbl> <date>    \n 1      8      18 Last Day in Florida         7.8        1429 2012-03-08\n 2      9      14 Vandalism                   7.6        1402 2013-01-31\n 3      2       8 Performance Review          8.2        2416 2005-11-15\n 4      9       5 Here Comes Treble           7.1        1515 2012-10-25\n 5      3      22 Beach Games                 9.1        2783 2007-05-10\n 6      7       1 Nepotism                    8.4        1897 2010-09-23\n 7      3      15 Phyllis' Wedding            8.3        2283 2007-02-08\n 8      9      21 Livin' the Dream            8.9        2041 2013-05-02\n 9      9      18 Promos                      8          1445 2013-04-04\n10      8      12 Pool Party                  8          1612 2012-01-19\n# â„¹ 131 more rows\n```\n:::\n:::\n\n\n## Feature engineering\n\n-   We prefer simple (parsimonious) models when possible, but **parsimony** does not mean sacrificing accuracy (or predictive performance) in the interest of simplicity\n\n-   Variables that go into the model and how they are represented are just as critical to success of the model\n\n-   **Feature engineering** allows us to get creative with our predictors in an effort to make them more useful for our model (to increase its predictive performance and improve interpretability)\n\n## Feature engineering with dplyr\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_train |>\n  mutate(\n    season = as_factor(season),\n    month = lubridate::month(air_date),\n    wday = lubridate::wday(air_date)\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 141 Ã— 8\n  season episode title            imdb_rating total_votes air_date   month  wday\n  <fct>    <dbl> <chr>                  <dbl>       <dbl> <date>     <dbl> <dbl>\n1 8           18 Last Day in Floâ€¦         7.8        1429 2012-03-08     3     5\n2 9           14 Vandalism                7.6        1402 2013-01-31     1     5\n3 2            8 Performance Revâ€¦         8.2        2416 2005-11-15    11     3\n4 9            5 Here Comes Trebâ€¦         7.1        1515 2012-10-25    10     5\n5 3           22 Beach Games              9.1        2783 2007-05-10     5     5\n6 7            1 Nepotism                 8.4        1897 2010-09-23     9     5\n# â„¹ 135 more rows\n```\n:::\n:::\n\n\n. . .\n\n::: question\nCan you identify any potential problems with this approach?\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n\n## Modeling workflow\n\n::: columns\n::: {.column width=\"70%\"}\n-   Create a **recipe** for feature engineering steps to be applied to the training data\n\n-   Fit the model to the training data after these steps have been applied\n\n-   Using the model estimates from the training data, predict outcomes for the test data\n\n-   Evaluate the performance of the model on the test data\n:::\n\n::: {.column width=\"30%\"}\n![](images/11/recipes.png){width=\"100%\"}\n:::\n:::\n\n# Building recipes\n\n## Initiate a recipe\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2|3\"}\noffice_rec <- recipe(\n  imdb_rating ~ .,    # formula\n  data = office_train # data for cataloging names and types of variables\n  )\n\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 5\n```\n:::\n:::\n\n\n## Step 1: Alter roles\n\n`title` isn't a predictor, but we might want to keep it around as an ID\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec |>\n  update_role(title, new_role = \"ID\")\n\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 4\nID:        1\n```\n:::\n:::\n\n\n## Step 2: Add features\n\nNew features for day of week and month\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec |>\n  step_date(air_date, features = c(\"dow\", \"month\"))\n\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 4\nID:        1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Operations \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Date features from: air_date\n```\n:::\n:::\n\n\n## Step 3: Add more features {.midi}\n\nIdentify holidays in `air_date`, then remove `air_date`\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2,3,4,5,6\"}\noffice_rec <- office_rec |>\n  step_holiday(\n    air_date, \n    holidays = c(\"USThanksgivingDay\", \"USChristmasDay\", \"USNewYearsDay\", \"USIndependenceDay\"), \n    keep_original_cols = FALSE\n  )\n\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 4\nID:        1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Operations \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Date features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Holiday features from: air_date\n```\n:::\n:::\n\n\n## Step 4: Convert numbers to factors {.midi}\n\nConvert `season` to factor\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec |>\n  step_num2factor(season, levels = as.character(1:9))\n\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 4\nID:        1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Operations \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Date features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Holiday features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Factor variables from: season\n```\n:::\n:::\n\n\n## Step 5: Make dummy variables {.midi}\n\nConvert all nominal (categorical) predictors to factors\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec |>\n  step_dummy(all_nominal_predictors())\n\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 4\nID:        1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Operations \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Date features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Holiday features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Factor variables from: season\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Dummy variables from: all_nominal_predictors()\n```\n:::\n:::\n\n\n## Step 6: Remove zero variance predictors {.midi}\n\nRemove all predictors that contain only a single value\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec |>\n  step_zv(all_predictors())\n\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 4\nID:        1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Operations \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Date features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Holiday features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Factor variables from: season\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Dummy variables from: all_nominal_predictors()\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Zero variance filter on: all_predictors()\n```\n:::\n:::\n\n\n## Putting it all together {.small}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_rec <- recipe(imdb_rating ~ ., data = office_train) |>\n  # make title's role ID\n  update_role(title, new_role = \"ID\") |>\n  # extract day of week and month of air_date\n  step_date(air_date, features = c(\"dow\", \"month\")) |>\n  # identify holidays and add indicators\n  step_holiday(\n    air_date, \n    holidays = c(\"USThanksgivingDay\", \"USChristmasDay\", \"USNewYearsDay\", \"USIndependenceDay\"), \n    keep_original_cols = FALSE\n  ) |>\n  # turn season into factor\n  step_num2factor(season, levels = as.character(1:9)) |>\n  # make dummy variables\n  step_dummy(all_nominal_predictors()) |>\n  # remove zero variance predictors\n  step_zv(all_predictors())\n```\n:::\n\n\n## Putting it all together\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_rec\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Recipe â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Inputs \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nNumber of variables by role\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\noutcome:   1\npredictor: 4\nID:        1\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ”€â”€ Operations \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Date features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Holiday features from: air_date\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Factor variables from: season\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Dummy variables from: all_nominal_predictors()\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nâ€¢ Zero variance filter on: all_predictors()\n```\n:::\n:::\n\n\n## Next step... {.midi}\n\nWe will complete the workflow to fit a model predicting IMDB ratings that includes the following predictors:\n\n-   `episode`\n-   `total_votes`\n-   indicator variables for `season`\n-   indicator variables for day of week aired (created using `air_date`)\n-   indicator variables for month aired (created using `air_date`)\n\n. . .\n\n::: question\nWhat feature will not end up in the final model? Why is it not included?\n:::\n\n# Application exercise\n\n::: appex\nðŸ“‹ [sta210-fa23.netlify.app/ae/ae-09-feature-engineering.html](https://sta210-fa23.netlify.app/ae/ae-09-feature-engineering.html)\n:::\n\n## Working with recipes\n\n-   When building recipes you in a pipeline, you don't get to see the effect of the recipe on your data, which can be unsettling\n\n-   You can take a peek at what will happen when you ultimately apply the recipe to your data at the time of fitting the model\n\n-   This requires two functions: `prep()` to train the recipe and `bake()` to apply it to your data\n\n::: callout-note\nThis is optional, we'll show the results for demonstrative purposes. It doesn't need to be part of your modeling pipeline, but it can be assuring to see the effects of the recipe steps as you build the recipe.\n:::\n\n# Application exercise\n\n::: appex\nðŸ“‹ [sta210-fa23.netlify.app/ae/ae-09-feature-engineering.html](https://sta210-fa23.netlify.app/ae/ae-09-feature-engineering.html)\n:::\n\n## Recap\n\n::: nonincremental\n-   Review: Training and testing splits\n-   Feature engineering with recipes\n:::\n",
    "supporting": [
      "11-feature-engineering_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}