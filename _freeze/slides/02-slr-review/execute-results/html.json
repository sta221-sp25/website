{
  "hash": "5941f35327b8fa5eb62e38dc473b691a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simple linear regression\"\nauthor: \"Prof. Maria Tackett\"\ndate: \"2024-08-29\"\ndate-format: \"MMM DD, YYYY\"\nfooter: \"[ðŸ”— STA 221 - Fall 2024](https://sta221-fa24.netlify.app)\"\nlogo: \"../images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: false\n    transition: fade\n    slide-number: true\n    incremental: false \n    chalkboard: true\nexecute:\n  freeze: auto\n  echo: true\nknitr:\n  opts_chunk: \n    R.options:      \n    width: 200\nbibliography: references.bib\n---\n\n\n\n## Announcements {.midi}\n\n-   No labs on Mon, Sep 2 (Labor Day)\n\n-   Application exercises start Tue, Sep 3\n\n    -   Bring fully-charged laptop or device with keyboard\n    -   Make sure you have accepted invite to GitHub course organization\n\n-   See website for [resources](https://sta221-fa24.netlify.app/computing-r-resources) to learn / review R\n\n-   Office hours start Tue, Sep 3\n\n# Questions from last class?\n\n## Topics\n\n-   How regression is used to understand the relationship between multiple variables\n-   Least squares estimation for the slope and intercept\n-   Interpret the slope and intercept\n-   Predict the response given a value of the predictor\n\n## Computing set up\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)        # for data wrangling\nlibrary(broom)            # for formatting regression output\nlibrary(fivethirtyeight)  # for the fandango dataset\nlibrary(knitr)            # for formatting tables\nlibrary(patchwork)        # for arranging graphs\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_bw(base_size = 16))\n\n# set default figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 8,\n  fig.asp = 0.618,\n  fig.retina = 3,\n  dpi = 300,\n  out.width = \"80%\"\n)\n```\n:::\n\n\n\n------------------------------------------------------------------------\n\n![Source: [*R for Data Science*](https://r4ds.hadley.nz/) with additions from *The Art of Statistics: How to Learn from Data*.](images/02/data-analysis-life-cycle.png)\n\n------------------------------------------------------------------------\n\n![Source:[*R for Data Science*](https://r4ds.hadley.nz/)](images/02/whole-game.png)\n\n# Data\n\n## Movie scores\n\n::: columns\n::: {.column width=\"70%\"}\n-   Data behind the FiveThirtyEight story [*Be Suspicious Of Online Movie Ratings, Especially Fandango's*](https://fivethirtyeight.com/features/fandango-movies-ratings/)\n-   In the **fivethirtyeight** package: [`fandango`](https://fivethirtyeight-r.netlify.app/reference/fandango.html)\n-   Contains every film released in 2014 and 2015 that has at least 30 fan reviews on Fandango, an IMDb score, Rotten Tomatoes critic and user ratings, and Metacritic critic and user scores\n:::\n\n::: {.column width=\"30%\"}\n![](images/02/fandango.png){fig-alt=\"Fandango logo\" width=\"200\"}\n\n![](images/02/imdb.png){fig-alt=\"IMDB logo\" width=\"200\"}\n\n![](images/02/rotten-tomatoes.png){fig-alt=\"Rotten Tomatoes logo\" width=\"200\"}\n\n![](images/02/metacritic.png){fig-alt=\"Metacritic logo\" width=\"200\"}\n:::\n:::\n\n## Data prep\n\n-   Rename Rotten Tomatoes columns as `critics` and `audience`\n-   Rename the dataset as `movie_scores`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_scores <- fandango |>\n  rename(critics = rottentomatoes, \n         audience = rottentomatoes_user)\n```\n:::\n\n\n\n## Data overview\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(movie_scores)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 146\nColumns: 23\n$ film                       <chr> \"Avengers: Age of Ultron\", \"Cinderella\", \"Aâ€¦\n$ year                       <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 2015, 2â€¦\n$ critics                    <int> 74, 85, 80, 18, 14, 63, 42, 86, 99, 89, 84,â€¦\n$ audience                   <int> 86, 80, 90, 84, 28, 62, 53, 64, 82, 87, 77,â€¦\n$ metacritic                 <int> 66, 67, 64, 22, 29, 50, 53, 81, 81, 80, 71,â€¦\n$ metacritic_user            <dbl> 7.1, 7.5, 8.1, 4.7, 3.4, 6.8, 7.6, 6.8, 8.8â€¦\n$ imdb                       <dbl> 7.8, 7.1, 7.8, 5.4, 5.1, 7.2, 6.9, 6.5, 7.4â€¦\n$ fandango_stars             <dbl> 5.0, 5.0, 5.0, 5.0, 3.5, 4.5, 4.0, 4.0, 4.5â€¦\n$ fandango_ratingvalue       <dbl> 4.5, 4.5, 4.5, 4.5, 3.0, 4.0, 3.5, 3.5, 4.0â€¦\n$ rt_norm                    <dbl> 3.70, 4.25, 4.00, 0.90, 0.70, 3.15, 2.10, 4â€¦\n$ rt_user_norm               <dbl> 4.30, 4.00, 4.50, 4.20, 1.40, 3.10, 2.65, 3â€¦\n$ metacritic_norm            <dbl> 3.30, 3.35, 3.20, 1.10, 1.45, 2.50, 2.65, 4â€¦\n$ metacritic_user_nom        <dbl> 3.55, 3.75, 4.05, 2.35, 1.70, 3.40, 3.80, 3â€¦\n$ imdb_norm                  <dbl> 3.90, 3.55, 3.90, 2.70, 2.55, 3.60, 3.45, 3â€¦\n$ rt_norm_round              <dbl> 3.5, 4.5, 4.0, 1.0, 0.5, 3.0, 2.0, 4.5, 5.0â€¦\n$ rt_user_norm_round         <dbl> 4.5, 4.0, 4.5, 4.0, 1.5, 3.0, 2.5, 3.0, 4.0â€¦\n$ metacritic_norm_round      <dbl> 3.5, 3.5, 3.0, 1.0, 1.5, 2.5, 2.5, 4.0, 4.0â€¦\n$ metacritic_user_norm_round <dbl> 3.5, 4.0, 4.0, 2.5, 1.5, 3.5, 4.0, 3.5, 4.5â€¦\n$ imdb_norm_round            <dbl> 4.0, 3.5, 4.0, 2.5, 2.5, 3.5, 3.5, 3.5, 3.5â€¦\n$ metacritic_user_vote_count <int> 1330, 249, 627, 31, 88, 34, 17, 124, 62, 54â€¦\n$ imdb_user_vote_count       <int> 271107, 65709, 103660, 3136, 19560, 39373, â€¦\n$ fandango_votes             <int> 14846, 12640, 12055, 1793, 1021, 397, 252, â€¦\n$ fandango_difference        <dbl> 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5â€¦\n```\n\n\n:::\n:::\n\n\n\n## Univariate exploratory data analysis (EDA)\n\nThe data set contains the \"Tomatometer\" score (**`critics`**) and audience score (**`audience`**) for 146 movies rated on rottentomatoes.com.\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## Bivariate EDA\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## Bivariate EDA\n\n**Goal**: Fit a line to describe the relationship between the critics score and audience score.\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## Why fit a line?\n\nWe fit a line to accomplish one or both of the following:\n\n<br>\n\n. . .\n\n::: {style=\"color: #799100\"}\n**Prediction**\n:::\n\n::: question\nWhat is an example of a prediction question for this data set?\n:::\n\n<br>\n\n. . .\n\n::: {style=\"color : #799100\"}\n**Inference**\n:::\n\n::: question\nWhat is an example of an inference question for this data set?\n:::\n\n## Terminology\n\n::: columns\n::: {.column width=\"30%\"}\n-   **Response,** $Y$: variable describing the outcome of interest\n\n-   **Predictor,** $X$: variable we use to help understand the variability in the response\n:::\n\n::: {.column width=\"70%\"}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n:::\n\n## Regression model\n\nA **regression model** is a function that describes the relationship between the response, $Y$, and the predictor, $X$.\n\n\n\n```{=tex}\n\\begin{aligned} Y &= \\color{black}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{black}{f(X)} + \\epsilon \\\\[8pt]\n& = \\color{black}{E(Y|X)} + \\epsilon \\\\[8pt]\n&= \\color{black}{\\mu_{Y|X}} + \\epsilon \\end{aligned}\n```\n\n\n## Regression model\n\n::: columns\n::: {.column width=\"30%\"}\n\n\n```{=tex}\n\\begin{aligned} Y &= \\color{purple}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{purple}{f(X)} + \\epsilon \\\\[8pt]\n&= \\color{purple}{E(Y|X)} + \\epsilon \\\\[8pt]\n&= \\color{purple}{\\mu_{Y|X}} + \\epsilon \\end{aligned}\n```\n\n\n:::\n\n::: {.column width=\"70%\"}\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n:::\n:::\n\n$E(Y|X) = \\mu_{Y|X}$, the mean value of $Y$ given a particular value of $X$.\n\n## Regression model\n\n::: columns\n::: {.column width=\"30%\"}\n$$\n\\begin{aligned} Y &= \\color{purple}{\\textbf{Model}} + \\color{blue}{\\textbf{Error}} \\\\[8pt]\n&= \\color{purple}{f(X)} + \\color{blue}{\\epsilon}\\\\[8pt]\n&= \\color{purple}{E(Y|X)} + \\color{blue}{\\epsilon}\\\\[8pt]\n&= \\color{purple}{\\mu_{Y|X}} + \\color{blue}{\\epsilon} \\\\\n \\end{aligned}\n$$\n:::\n\n::: {.column width=\"70%\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-7-1.png){width=80%}\n:::\n:::\n\n\n:::\n:::\n\n## Determine $f(X)$ \n\n-   **Goal**: Determine $f(X)$\n\n-   How do we determine $f(X)$\n\n    -   Make an assumption about the functional form $f(X)$ (parametric model)\n\n    -   Use the data to fit a model based on that form\n\n# Simple linear regression (SLR)\n\n## SLR: Statistical model (population)\n\nWhen we have a quantitative response, $Y$, and a single quantitative predictor, $X$, we can use a **simple linear regression** model to describe the relationship between $Y$ and $X$. $$\\large{Y = \\mathbf{\\beta_0 + \\beta_1 X} + \\epsilon}, \\hspace{8mm} \\epsilon \\sim N(0, \\sigma_{\\epsilon}^2)$$\n\n. . .\n\n-   $\\beta_1$: Population (true) slope of the relationship between $X$ and $Y$\n-   $\\beta_0$: Population (true) intercept of the relationship between $X$ and $Y$\n-   $\\epsilon$: Error\n\n## SLR: Regression equation (sample)\n\n$$\\Large{\\hat{Y} = \\hat{\\beta}_0 + \\hat{\\beta}_1 X}$$\n\n-   $\\hat{\\beta}_1$: Estimated (sample) slope of the relationship between $X$ and $Y$\n-   $\\hat{\\beta}_0$: Estimated (sample) intercept of the relationship between $X$ and $Y$\n-   No error term!\n\n## Choosing values for $\\hat{\\beta}_1$ and $\\hat{\\beta}_0$\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n## Residuals\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](02-slr-review_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=80%}\n:::\n:::\n\n\n\n$$\\text{residual} = \\text{observed} - \\text{predicted} = y_i - \\hat{y}_i$$\n\n## Least squares line\n\n-   The residual for the $i^{th}$ observation is\n\n$$e_i = \\text{observed} - \\text{predicted}\n= y_i - \\hat{y}_i$$\n\n-   The **sum of squared residuals** is\n\n$$e^2_1 + e^2_2 + \\dots + e^2_n$$\n\n-   The **least squares line** is the one that minimizes the sum of squared residuals\n\n::: callout-note\n[Click here](https://introregression.netlify.app/98-appendix#sec-least-sq-math) for full calculations.\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n# Slope and intercept\n\n## Properties of least squares regression\n\n::: incremental\n-   The regression line goes through the center of mass point, the coordinates corresponding to average $X$ and average $Y$: $\\hat{\\beta}_0 = \\bar{Y} - \\hat{\\beta}_1\\bar{X}$\n\n-   The slope has the same sign as the correlation coefficient: $\\hat{\\beta}_1 = r \\frac{s_Y}{s_X}$\n\n-   The sum of the residuals is approximately zero: $\\sum_{i = 1}^n e_i \\approx 0$\n\n-   The residuals and $X$ values are uncorrelated\n:::\n\n## Estimating the slope\n\n$$\\large{\\hat{\\beta}_1 = r \\frac{s_Y}{s_X}}$$\n\n<br>\n\n. . .\n\n$$\n\\begin{aligned} s_X = 30.1688  \\hspace{15mm} &s_Y =  20.0244 \\hspace{15mm} r  = 0.7814 \\\\[10pt]\\hat{\\beta}_1  &= 0.7814 \\times \\frac{20.0244}{30.1688} \\\\&= \\mathbf{0.5187}\\end{aligned}\n$$\n\n## Estimating the intercept\n\n$$\\large{\\hat{\\beta}_0 = \\bar{Y} - \\hat{\\beta}_1\\bar{X}}$$\n\n<br>\n\n. . .\n\n$$\n\\begin{aligned}\\bar{x} = 60.8493 & \\hspace{15mm} \\bar{y} = 63.8767 \\hspace{15mm} \\hat{\\beta}_1 = 0.5187 \\\\[10pt]\n\\hat{\\beta}_0 &= 63.8767 - 0.5187 \\times 60.8493 \\\\\n&= \\mathbf{32.3142}\\end{aligned}\n$$\n\n## Interpretation\n\n::: panel-tabset\n## Question\n\n::: appex\n::: midi\nSubmit your answers to the following questions on Ed Discussion:\n\n-   The slope of the model for predicting audience score from critics score is 0.5187 . Which of the following is the best interpretation of this value?\n\n-   32.3142 is the predicted mean audience score for what type of movies?\n:::\n:::\n\n## Submit\n\n\n\n```{=html}\n<iframe allowfullscreen frameborder=\"0\" height=\"100%\" mozallowfullscreen style=\"min-width: 500px; min-height: 355px\" src=\"https://edstem.org/us/courses/62513/discussion/5181157\" width=\"100%\"></iframe>\n```\n\n\n:::\n\nðŸ”— <https://edstem.org/us/courses/62513/discussion/5181157>\n\n## Does it make sense to interpret the intercept?\n\n. . .\n\nâœ… **The intercept is meaningful in the context of the data if**\n\n-   the predictor can feasibly take values equal to or near zero, or\n\n-   there are values near zero in the observed data.\n\n. . .\n\nðŸ›‘ Otherwise, the intercept may not be meaningful!\n\n# Prediction\n\n## Making a prediction\n\nSuppose that a movie has a critics score of 70. According to this model, what is the movie's predicted audience score?\n\n\n\n```{=tex}\n\\begin{aligned}\n\\widehat{\\text{audience}} &= 32.3142 + 0.5187 \\times \\text{critics} \\\\\n&= 32.3142 + 0.5187 \\times 70 \\\\\n&= \\mathbf{68.6232}\n\\end{aligned}\n```\n\n\n# Linear regression in R\n\n## Fit the model \n\nWe use the `lm()` function to fit a linear regression model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovie_fit <- lm(audience ~ critics, data = movie_scores)\nmovie_fit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = audience ~ critics, data = movie_scores)\n\nCoefficients:\n(Intercept)      critics  \n    32.3155       0.5187  \n```\n\n\n:::\n:::\n\n\n\n## Tidy results\n\nWe use the `tidy()` function from the **broom** R package to \"tidy\" the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\nmovie_fit <- lm(audience ~ critics, data = movie_scores)\ntidy(movie_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 Ã— 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   32.3      2.34        13.8 4.03e-28\n2 critics        0.519    0.0345      15.0 2.70e-31\n```\n\n\n:::\n:::\n\n\n\n## Format results\n\n<div>\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|2,3\"}\nmovie_fit <- lm(audience ~ critics, data = movie_scores)\ntidy(movie_fit) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   32.316|     2.343|    13.795|       0|\n|critics     |    0.519|     0.035|    15.028|       0|\n\n\n:::\n:::\n\n\n\n</div>\n\n## Prediction \n\n**Single observation**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_movie <- tibble(critics = 70)\npredict(movie_fit, new_movie)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1 \n68.62297 \n```\n\n\n:::\n:::\n\n\n\n<br>\n\n. . .\n\n**Multiple observations**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmore_new_movies <- tibble(critics = c(24,70, 85))\npredict(movie_fit, more_new_movies)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       1        2        3 \n44.76379 68.62297 76.40313 \n```\n\n\n:::\n:::\n\n\n\n## Recap\n\n-   Described how regression is used to understand the relationship between multiple variables\n-   Used least squares to estimate the slope and intercept\n-   Interpreted the slope and intercept for simple linear regression\n-   Predicted the response given a value of the predictor\n\n## Next time\n\n-   Model assessment for simple linear regression\n\n    -   See [Sep 3 prepare](../prepare/prepare-sep3.html)\n\n-   Bring fully-charged laptop or device with keyboard for in-class application exercise (AE)\n",
    "supporting": [
      "02-slr-review_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}