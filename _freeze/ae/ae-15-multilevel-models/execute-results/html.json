{
  "hash": "2f3487ea91d8cc2e12541d50a123cb61",
  "result": {
    "markdown": "---\ntitle: \"AE 15: Introduction to Multilevel Models\"\ndate: \"Nov 28, 2022\"\neditor: visual\nexecute: \n  warning: false\n  message: false\neditor_options: \n  chunk_output_type: console\n---\n\n\n::: callout-important\nGo to the [course GitHub organization](https://github.com/sta210-fa22) and locate your `ae-15`- to get started.\n\nThe AE is due on GitHub by Thursday, December 01, 11:59pm.\n:::\n\n::: callout-important\nThe AE is due on GitHub by Thursday, December 01, 11:59pm.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(knitr)\nlibrary(patchwork)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmusic <- read_csv(\"data/musicdata.csv\") |>\n  mutate(orchestra = if_else(instrument == \"orchestral instrument\", 1, 0), \n         large_ensemble = if_else(perform_type == \"Large Ensemble\", 1, 0))\n```\n:::\n\n\n## Part 1: Univariate EDA\n\n1.  Plot the distribution of the response variable negative affect (`na`) using individual observations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data  = music, aes(x = na)) + \n  geom_histogram(fill = \"steelblue\", color = \"black\", binwidth = 2) + \n  labs(x = \"Individual scores\", \n       title =\"Distribution of Negative Affect Score\")\n```\n\n::: {.cell-output-display}\n![](ae-15-multilevel-models_files/figure-html/univariate-1-1.png){width=672}\n:::\n:::\n\n\n2.  Plot the distribution of the response variable using an aggregated value (or single observation) for each Level Two observation (musician).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmusic |>\n  group_by(id) |>\n  summarise(mean_na = mean(na)) |>\n  ungroup() |>\n  ggplot(aes(x = mean_na)) + \n  geom_histogram(fill = \"steelblue\", color = \"black\", binwidth = 2) + \n  labs(x = \"Mean scores\", \n       title = \"Distribution of Mean Negative Affect Scores\",\n       subtitle = \"By Musician\")\n```\n\n::: {.cell-output-display}\n![](ae-15-multilevel-models_files/figure-html/univariate-2-1.png){width=672}\n:::\n:::\n\n\n3.  How do the plots compare? How do they differ?\n\n4.  What are some advantages of each plot? What are some disadvantages?\n\n## Part 2: Bivariate EDA\n\n1.  Make a single scatterplot of the negative affect versus number of previous performances (`previous`) using the individual observations. Use `geom_smooth()` to add a linear regression line to the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add code\n```\n:::\n\n\n2.  Make a separate scatterplot of the negative affect versus number of previous performances (`previous`) faceted by musician (`id`). Use `geom_smooth()` to add a linear regression line to each plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add code\n```\n:::\n\n\n3.  How do the plots compare? How do they differ?\n\n4.  What are some advantages of each plot? What are some disadvantages?\n\n## Part 3: Level One Models\n\nCode to fit and display the Level One model for Observation 22 is below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nid_22 <- music |>\n  filter(id == 22)\n\nlinear_reg() |>\n  set_engine(\"lm\") |>\n  fit(na ~ large_ensemble, data = id_22) |>\n  tidy() |> kable(digits = 3)\n```\n\n::: {.cell-output-display}\n|term           | estimate| std.error| statistic| p.value|\n|:--------------|--------:|---------:|---------:|-------:|\n|(Intercept)    |   24.500|      1.96|    12.503|   0.000|\n|large_ensemble |   -7.833|      2.53|    -3.097|   0.009|\n:::\n:::\n\n\nCode to fit the Level One model and get the fitted slope, intercept, and $R^2$ values for all musicians is below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# set up tibble for fitted values \n\nmodel_stats <- tibble(slopes = rep(0,37), \n               intercepts = rep(0,37), \n               r.squared = rep(0, 37))\n\n\nids <- music |> distinct(id) |> pull()\n\n# counter to keep track of row number to store model_stats\n\ncount <- 1\n\nfor(i in ids){\n  \nid_data <- music |>\n  filter(id == i)\n\nlevel_one_model <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(na ~ large_ensemble, data = id_data) \n\nlevel_one_model_tidy <- tidy(level_one_model)\n\nmodel_stats$slopes[count] <- level_one_model_tidy$estimate[2]\nmodel_stats$intercepts[count] <- level_one_model_tidy$estimate[1]\nmodel_stats$r.squared[count] <- glance(level_one_model)$r.squared\n\ncount = count + 1\n}\n```\n:::\n\n\n## Part 4: Level Two Models\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make a Level Two data set\nmusicians <- music |>\n  distinct(id, orchestra) |>\n  bind_cols(model_stats)\n```\n:::\n\n\n**Model for intercepts**\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(intercepts ~ orchestra, data = musicians) \n\ntidy(a) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   16.283|     0.671|    24.249|   0.000|\n|orchestra   |    1.411|     0.991|     1.424|   0.163|\n:::\n:::\n\n\n**Model for slopes**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- linear_reg() |>\n  set_engine(\"lm\") |>\n  fit(slopes ~ orchestra, data = musicians) \n\ntidy(b) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |   -0.771|     0.851|    -0.906|   0.373|\n|orchestra   |   -1.406|     1.203|    -1.168|   0.253|\n:::\n:::\n\n\n## Part 5: Distribution of $R^2$ values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = model_stats, aes(x = r.squared)) +\n  geom_dotplot(fill = \"steelblue\",  color = \"black\") +\n  labs(x = \"R-squared values\", \n       title = \"Distribution of R-squared of Level One models\")\n```\n\n::: {.cell-output-display}\n![](ae-15-multilevel-models_files/figure-html/r-sq-dist-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "ae-15-multilevel-models_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}