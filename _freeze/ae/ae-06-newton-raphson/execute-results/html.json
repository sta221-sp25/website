{
  "hash": "617a810364ca2a1df0731bfeb37021bb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"AE 06: Newton Raphson\"\ndate: \"April 10, 2025\"\neditor: visual\nbibliography: references.bib\n---\n\n\n\n::: callout-important\nGo to the course GitHub organization and locate your ae-06 repo to get started.\n\nYou do not need to submit this AE.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(tidymodels)\n```\n:::\n\n\n\n# Introduction\n\n## COVID-19 infection prevention practices at food establishments\n\nResearchers at Wollo University in Ethiopia conducted a study in July and August 2020 to understand factors associated with good COVID-19 infection prevention practices at food establishments. Their study is published in @andualem2022.\n\nThey were particularly interested in the understanding implementation of prevention practices at food establishments, given the workersâ€™ increased risk due to daily contact with customers.\n\nWe will use the data from @andualem2022 to explore the association between age, sex, years of service, and whether someone works at a food establishment with access to personal protective equipment (PPE) as of August 2020. We will use access to PPE as a proxy for wearing PPE.\n\nThe study participants were selected using a simple random sampling at the selected establishments.\n\n.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncovid_df <- read_csv(\"data/covid-prevention-study.csv\") |>\n  rename(age = \"Age of food handlers\", \n         years = \"Years of service\", \n         ppe_access = \"Availability of PPEs\") |>\n  mutate(sex = factor(if_else(Sex == 2, \"Female\", \"Male\")),\n         ppe_access = as_factor(ppe_access))\n```\n:::\n\n\n\n## Functions for Newton-Raphson\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Calculate the gradient of logL (score function)\n\ncalc_first_deriv <- function(beta, X, y){\n  first_deriv <- rep(0, length(beta))\n  for(i in 1:length(y)){\n    first_deriv <- first_deriv + as.numeric(y[i] - exp(X[i,] %*% beta)/(1 + exp(X[i,] %*% beta))) %*% X[i,]\n  }\n  return(colSums(first_deriv)) #return values as a vector \n}\n\n## Calculate the Hessian matrix \n\ncalc_second_deriv <- function(beta, X, y){\n  second_deriv <- matrix(0, nrow = length(beta), ncol = length(beta))\n  for(i in 1:length(y)){\n    second_deriv <- second_deriv + as.numeric(1/(1 + exp(X[i,] %*% beta)))*\n      as.numeric((exp(X[i,] %*% beta)/(1 + exp(X[i,] %*% beta)))) * \n      (X[i,]) %*% t(X[i,])\n  }\n  return(second_deriv)\n}\n```\n:::\n\n\n\n## Starting values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# design matrix\nX <- model.matrix(~ age + sex + years, data = covid_df)\n\n# vector of response\ny <- I(covid_df$ppe_access == 1)\n\n# vector of coefficients\nbeta <- c(0, 0, 0, 0)\n\n# keep track of iterations\niter <- 1\n\n# keep track of difference in estimates\ndelta <- 1\n\n# keep track of estimates at each iteration \ntemp <- matrix(0, nrow = 500, ncol = 4) \n```\n:::\n\n\n\n## Estimate $\\boldsymbol{\\beta}$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhile(delta > 0.000001 & iter < 50){\n  old <- beta\n  beta <- old - solve(-1 * calc_second_deriv(beta = beta, X = X, y = y)) %*% \n                calc_first_deriv(beta = beta, X = X, y = y)\n  temp[iter,] <- beta\n  delta <- sqrt(sum((beta - old)^2))\n  iter <- iter + 1\n}\n```\n:::\n\n\n\n## Show results\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\niter\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7\n```\n\n\n:::\n\n```{.r .cell-code}\nbeta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   [,1]\n(Intercept) -2.12709823\nage          0.05586608\nsexMale      0.34070061\nyears        0.26396205\n```\n\n\n:::\n:::\n\n\n\nNote that $(\\nabla^2_{\\boldsymbol{\\beta}} \\log L)^{-1}$is the estimate for $Var(\\boldsymbol{\\hat{\\beta}})$ . The square root of the diagonal elements are the estimates for $SE(\\hat{\\boldsymbol{\\beta}})$.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#calculate the hessian matrix\nsecond_deriv <- calc_second_deriv(beta = beta, X = X, y = y)\n  \n# take the inverse\ninv_second_deriv <- solve(second_deriv)\n\n# get estimates for SE\nse_beta <- sqrt(diag(inv_second_deriv))\n\nse_beta\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.45832580 0.01740581 0.22360561 0.06583117\n```\n\n\n:::\n:::\n\n\n\n## Coefficient estimates from `glm`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nppe_model <- glm(ppe_access ~ age + sex + years, \n                 data = covid_df, family = binomial)\ntidy(ppe_model, conf.int = TRUE) |>\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term        | estimate| std.error| statistic| p.value| conf.low| conf.high|\n|:-----------|--------:|---------:|---------:|-------:|--------:|---------:|\n|(Intercept) |   -2.127|     0.458|    -4.641|   0.000|   -3.058|    -1.257|\n|age         |    0.056|     0.017|     3.210|   0.001|    0.023|     0.091|\n|sexMale     |    0.341|     0.224|     1.524|   0.128|   -0.098|     0.780|\n|years       |    0.264|     0.066|     4.010|   0.000|    0.143|     0.401|\n\n\n:::\n:::\n\n\n\n## References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}